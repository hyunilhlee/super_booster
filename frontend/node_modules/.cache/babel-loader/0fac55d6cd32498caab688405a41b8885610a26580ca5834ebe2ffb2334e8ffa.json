{"ast":null,"code":"var _jsxFileName = \"/Users/hyunillee/Projects/analysis_youtube/frontend/src/components/products/ProductSelection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Card, CardContent, Slider, Checkbox, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst products = [{\n  name: '조회수 늘리기',\n  type: 'views',\n  pricePerUnit: 100,\n  minAmount: 1000,\n  maxAmount: 100000,\n  step: 1000\n}, {\n  name: '좋아요 늘리기',\n  type: 'likes',\n  pricePerUnit: 200,\n  minAmount: 100,\n  maxAmount: 10000,\n  step: 100\n}, {\n  name: '댓글 늘리기',\n  type: 'comments',\n  pricePerUnit: 500,\n  minAmount: 10,\n  maxAmount: 1000,\n  step: 10\n}];\nexport const ProductSelection = ({\n  videos = [],\n  onProductSelect\n}) => {\n  _s();\n  const [selectedVideos, setSelectedVideos] = useState({});\n  const [subscriberCount, setSubscriberCount] = useState(0);\n  const [metrics, setMetrics] = useState({});\n  const handleVideoSelect = videoUrl => {\n    setSelectedVideos(prev => ({\n      ...prev,\n      [videoUrl]: !prev[videoUrl]\n    }));\n    // 비디오 선택 시 기본값 설정\n    if (!metrics[videoUrl]) {\n      const video = videos.find(v => v.url === videoUrl);\n      if (video) {\n        setMetrics(prev => ({\n          ...prev,\n          [videoUrl]: {\n            views: parseInt(video.statistics.viewCount),\n            likes: parseInt(video.statistics.likeCount),\n            comments: parseInt(video.statistics.commentCount),\n            baseViews: parseInt(video.statistics.viewCount),\n            baseLikes: parseInt(video.statistics.likeCount),\n            baseComments: parseInt(video.statistics.commentCount)\n          }\n        }));\n      }\n    }\n  };\n  const handleMetricChange = (videoUrl, metric, value) => {\n    setMetrics(prev => ({\n      ...prev,\n      [videoUrl]: {\n        ...prev[videoUrl],\n        [metric]: value\n      }\n    }));\n  };\n  const calculateMetricIncrease = (videoUrl, metric) => {\n    const metricData = metrics[videoUrl];\n    if (!metricData) return 0;\n    const baseValue = metricData[`base${metric.charAt(0).toUpperCase() + metric.slice(1)}`];\n    const currentValue = metricData[metric];\n    return Math.max(0, currentValue - baseValue);\n  };\n  const calculateMetricPrice = (videoUrl, metric) => {\n    const increase = calculateMetricIncrease(videoUrl, metric);\n    const product = products.find(p => p.type === metric);\n    if (!product || increase <= 0) return 0;\n    return increase * product.pricePerUnit;\n  };\n  const calculateTotal = () => {\n    let total = subscriberCount * 1000; // 구독자 수 * 단가\n\n    Object.entries(selectedVideos).forEach(([url, isSelected]) => {\n      if (isSelected && metrics[url]) {\n        total += calculateMetricPrice(url, 'views') + calculateMetricPrice(url, 'likes') + calculateMetricPrice(url, 'comments');\n      }\n    });\n    return total;\n  };\n\n  // 성과 지표에 따른 색상 반환 함수\n  const getPerformanceColor = performance => {\n    switch (performance) {\n      case '우수':\n        return 'primary';\n      case '적정':\n        return 'success';\n      case '미달':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"1. \\uAD6C\\uB3C5\\uC790 \\uB298\\uB9AC\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"number\",\n            label: \"\\uB298\\uB9B4 \\uAD6C\\uB3C5\\uC790 \\uC218\",\n            variant: \"outlined\",\n            value: subscriberCount || '',\n            onChange: e => setSubscriberCount(Number(e.target.value)),\n            InputProps: {\n              inputProps: {\n                min: 0,\n                step: 100\n              }\n            },\n            sx: {\n              width: 200\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              ml: 2\n            },\n            children: [\"\\uAC00\\uACA9: \\u20A9\", (subscriberCount * 1000).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"2. \\uAC8C\\uC2DC\\uBB3C \\uC9C0\\uD45C \\uB298\\uB9AC\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\",\n              style: {\n                width: '50px'\n              },\n              children: \"\\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                width: '120px'\n              },\n              children: \"\\uC378\\uB124\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                width: '300px'\n              },\n              children: \"\\uC601\\uC0C1 \\uC815\\uBCF4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\uC131\\uACFC \\uC9C0\\uD45C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: videos.map(video => {\n            var _video$performance, _video$performance2, _video$performance3, _video$performance4, _video$performance5, _video$performance6;\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  rowSpan: 2,\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: selectedVideos[video.url] || false,\n                    onChange: () => handleVideoSelect(video.url)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  rowSpan: 2,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: video.thumbnail,\n                    alt: video.title,\n                    style: {\n                      width: '100px',\n                      height: '56px',\n                      objectFit: 'cover'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: video.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"\\uC5C5\\uB85C\\uB4DC: \", video.publishedAt]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      gap: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Chip, {\n                      label: `조회수: ${((_video$performance = video.performance) === null || _video$performance === void 0 ? void 0 : _video$performance.views) || '미달'}`,\n                      color: getPerformanceColor((_video$performance2 = video.performance) === null || _video$performance2 === void 0 ? void 0 : _video$performance2.views),\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `좋아요: ${((_video$performance3 = video.performance) === null || _video$performance3 === void 0 ? void 0 : _video$performance3.likes) || '미달'}`,\n                      color: getPerformanceColor((_video$performance4 = video.performance) === null || _video$performance4 === void 0 ? void 0 : _video$performance4.likes),\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `댓글: ${((_video$performance5 = video.performance) === null || _video$performance5 === void 0 ? void 0 : _video$performance5.comments) || '미달'}`,\n                      color: getPerformanceColor((_video$performance6 = video.performance) === null || _video$performance6 === void 0 ? void 0 : _video$performance6.comments),\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 2,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      px: 2,\n                      py: 1\n                    },\n                    children: [products.map(product => {\n                      var _metrics$video$url, _metrics$video$url2, _metrics$video$url3;\n                      return /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          mb: 2\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          gutterBottom: true,\n                          children: product.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 265,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: 2\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              flex: 1\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Slider, {\n                              disabled: !selectedVideos[video.url],\n                              min: ((_metrics$video$url = metrics[video.url]) === null || _metrics$video$url === void 0 ? void 0 : _metrics$video$url[`base${product.type}`]) || 0,\n                              max: (((_metrics$video$url2 = metrics[video.url]) === null || _metrics$video$url2 === void 0 ? void 0 : _metrics$video$url2[`base${product.type}`]) || 0) + product.maxAmount,\n                              step: product.step,\n                              valueLabelDisplay: \"auto\",\n                              value: ((_metrics$video$url3 = metrics[video.url]) === null || _metrics$video$url3 === void 0 ? void 0 : _metrics$video$url3[product.type]) || 0,\n                              onChange: (_, value) => handleMetricChange(video.url, product.type, value)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 268,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 267,\n                            columnNumber: 29\n                          }, this), selectedVideos[video.url] && /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              minWidth: 200\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"body2\",\n                              children: [\"\\uC99D\\uAC00\\uB7C9: \", calculateMetricIncrease(video.url, product.type).toLocaleString(), product.type === 'views' ? '회' : '개']\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 282,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"body2\",\n                              children: [\"\\uAC00\\uACA9: \\u20A9\", calculateMetricPrice(video.url, product.type).toLocaleString()]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 286,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 281,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 266,\n                          columnNumber: 27\n                        }, this)]\n                      }, product.type, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 264,\n                        columnNumber: 25\n                      }, this);\n                    }), selectedVideos[video.url] && /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mt: 1,\n                        textAlign: 'right'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        color: \"primary\",\n                        children: [\"\\uC601\\uC0C1 \\uCD1D\\uC561: \\u20A9\", (calculateMetricPrice(video.url, 'views') + calculateMetricPrice(video.url, 'likes') + calculateMetricPrice(video.url, 'comments')).toLocaleString()]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)]\n            }, video.url, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        p: 2,\n        bgcolor: 'background.paper'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"\\uACAC\\uC801\\uC11C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"\\uAD6C\\uB3C5\\uC790 \\uB298\\uB9AC\\uAE30: \", subscriberCount.toLocaleString(), \"\\uBA85 (\\u20A9\", (subscriberCount * 1000).toLocaleString(), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), Object.entries(selectedVideos).map(([url, isSelected]) => {\n        if (isSelected && metrics[url]) {\n          const video = videos.find(v => v.url === url);\n          const viewsIncrease = calculateMetricIncrease(url, 'views');\n          const likesIncrease = calculateMetricIncrease(url, 'likes');\n          const commentsIncrease = calculateMetricIncrease(url, 'comments');\n          const totalPrice = calculateMetricPrice(url, 'views') + calculateMetricPrice(url, 'likes') + calculateMetricPrice(url, 'comments');\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: video === null || video === void 0 ? void 0 : video.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                ml: 2\n              },\n              children: [\"\\uC870\\uD68C\\uC218: +\", viewsIncrease.toLocaleString(), \"\\uD68C (\\u20A9\", calculateMetricPrice(url, 'views').toLocaleString(), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                ml: 2\n              },\n              children: [\"\\uC88B\\uC544\\uC694: +\", likesIncrease.toLocaleString(), \"\\uAC1C (\\u20A9\", calculateMetricPrice(url, 'likes').toLocaleString(), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                ml: 2\n              },\n              children: [\"\\uB313\\uAE00: +\", commentsIncrease.toLocaleString(), \"\\uAC1C (\\u20A9\", calculateMetricPrice(url, 'comments').toLocaleString(), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                ml: 2\n              },\n              children: [\"\\uAC00\\uACA9: \\u20A9\", totalPrice.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)]\n          }, url, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      }), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 2\n        },\n        children: [\"\\uCD1D \\uACAC\\uC801: \\u20A9\", calculateTotal().toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductSelection, \"qHfDxgRaC7yqkf5l0vQjW5lkCfg=\");\n_c = ProductSelection;\nvar _c;\n$RefreshReg$(_c, \"ProductSelection\");","map":{"version":3,"names":["React","useState","Box","Typography","Card","CardContent","Slider","Checkbox","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","Chip","jsxDEV","_jsxDEV","products","name","type","pricePerUnit","minAmount","maxAmount","step","ProductSelection","videos","onProductSelect","_s","selectedVideos","setSelectedVideos","subscriberCount","setSubscriberCount","metrics","setMetrics","handleVideoSelect","videoUrl","prev","video","find","v","url","views","parseInt","statistics","viewCount","likes","likeCount","comments","commentCount","baseViews","baseLikes","baseComments","handleMetricChange","metric","value","calculateMetricIncrease","metricData","baseValue","charAt","toUpperCase","slice","currentValue","Math","max","calculateMetricPrice","increase","product","p","calculateTotal","total","Object","entries","forEach","isSelected","getPerformanceColor","performance","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","display","alignItems","gap","label","onChange","e","Number","target","InputProps","inputProps","min","width","ml","toLocaleString","component","padding","style","map","_video$performance","_video$performance2","_video$performance3","_video$performance4","_video$performance5","_video$performance6","Fragment","rowSpan","checked","src","thumbnail","alt","title","height","objectFit","color","publishedAt","colSpan","px","py","_metrics$video$url","_metrics$video$url2","_metrics$video$url3","flex","disabled","valueLabelDisplay","_","minWidth","textAlign","bgcolor","viewsIncrease","likesIncrease","commentsIncrease","totalPrice","_c","$RefreshReg$"],"sources":["/Users/hyunillee/Projects/analysis_youtube/frontend/src/components/products/ProductSelection.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Slider,\n  FormControlLabel,\n  Checkbox,\n  Radio,\n  RadioGroup,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TextField,\n  Chip\n} from '@mui/material';\n\ninterface Video {\n  title: string;\n  publishedAt: string;\n  url: string;\n  videoId: string;\n  thumbnail: string;\n  statistics: {\n    viewCount: string;\n    likeCount: string;\n    commentCount: string;\n  };\n  performance?: {\n    views: string;\n    likes: string;\n    comments: string;\n  };\n}\n\ninterface MetricProduct {\n  name: string;\n  type: 'views' | 'likes' | 'comments';\n  pricePerUnit: number;\n  minAmount: number;\n  maxAmount: number;\n  step: number;\n}\n\ninterface ProductSelectionProps {\n  videos: Video[];\n  onProductSelect: (selection: any) => void;\n}\n\nconst products: MetricProduct[] = [\n  {\n    name: '조회수 늘리기',\n    type: 'views',\n    pricePerUnit: 100,\n    minAmount: 1000,\n    maxAmount: 100000,\n    step: 1000\n  },\n  {\n    name: '좋아요 늘리기',\n    type: 'likes',\n    pricePerUnit: 200,\n    minAmount: 100,\n    maxAmount: 10000,\n    step: 100\n  },\n  {\n    name: '댓글 늘리기',\n    type: 'comments',\n    pricePerUnit: 500,\n    minAmount: 10,\n    maxAmount: 1000,\n    step: 10\n  }\n];\n\nexport const ProductSelection: React.FC<ProductSelectionProps> = ({ videos = [], onProductSelect }) => {\n  const [selectedVideos, setSelectedVideos] = useState<{[key: string]: boolean}>({});\n  const [subscriberCount, setSubscriberCount] = useState<number>(0);\n  const [metrics, setMetrics] = useState<{[key: string]: {\n    views: number;\n    likes: number;\n    comments: number;\n    baseViews: number;\n    baseLikes: number;\n    baseComments: number;\n  }}>({});\n\n  const handleVideoSelect = (videoUrl: string) => {\n    setSelectedVideos(prev => ({\n      ...prev,\n      [videoUrl]: !prev[videoUrl]\n    }));\n    // 비디오 선택 시 기본값 설정\n    if (!metrics[videoUrl]) {\n      const video = videos.find(v => v.url === videoUrl);\n      if (video) {\n        setMetrics(prev => ({\n          ...prev,\n          [videoUrl]: {\n            views: parseInt(video.statistics.viewCount),\n            likes: parseInt(video.statistics.likeCount),\n            comments: parseInt(video.statistics.commentCount),\n            baseViews: parseInt(video.statistics.viewCount),\n            baseLikes: parseInt(video.statistics.likeCount),\n            baseComments: parseInt(video.statistics.commentCount)\n          }\n        }));\n      }\n    }\n  };\n\n  const handleMetricChange = (videoUrl: string, metric: string, value: number) => {\n    setMetrics(prev => ({\n      ...prev,\n      [videoUrl]: {\n        ...prev[videoUrl],\n        [metric]: value\n      }\n    }));\n  };\n\n  const calculateMetricIncrease = (videoUrl: string, metric: string) => {\n    const metricData = metrics[videoUrl];\n    if (!metricData) return 0;\n\n    const baseValue = metricData[`base${metric.charAt(0).toUpperCase() + metric.slice(1)}` as keyof typeof metricData];\n    const currentValue = metricData[metric as keyof typeof metricData];\n    \n    return Math.max(0, currentValue - baseValue);\n  };\n\n  const calculateMetricPrice = (videoUrl: string, metric: string) => {\n    const increase = calculateMetricIncrease(videoUrl, metric);\n    const product = products.find(p => p.type === metric);\n    \n    if (!product || increase <= 0) return 0;\n    return increase * product.pricePerUnit;\n  };\n\n  const calculateTotal = () => {\n    let total = subscriberCount * 1000; // 구독자 수 * 단가\n    \n    Object.entries(selectedVideos).forEach(([url, isSelected]) => {\n      if (isSelected && metrics[url]) {\n        total += calculateMetricPrice(url, 'views') +\n                calculateMetricPrice(url, 'likes') +\n                calculateMetricPrice(url, 'comments');\n      }\n    });\n    \n    return total;\n  };\n\n  // 성과 지표에 따른 색상 반환 함수\n  const getPerformanceColor = (performance?: string) => {\n    switch (performance) {\n      case '우수':\n        return 'primary';\n      case '적정':\n        return 'success';\n      case '미달':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  return (\n    <Box sx={{ mt: 4 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        1. 구독자 늘리기\n      </Typography>\n      <Card sx={{ mb: 4 }}>\n        <CardContent>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            <TextField\n              type=\"number\"\n              label=\"늘릴 구독자 수\"\n              variant=\"outlined\"\n              value={subscriberCount || ''}\n              onChange={(e) => setSubscriberCount(Number(e.target.value))}\n              InputProps={{\n                inputProps: { min: 0, step: 100 }\n              }}\n              sx={{ width: 200 }}\n            />\n            <Typography variant=\"body1\" sx={{ ml: 2 }}>\n              가격: ₩{(subscriberCount * 1000).toLocaleString()}\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Typography variant=\"h5\" gutterBottom>\n        2. 게시물 지표 늘리기\n      </Typography>\n\n      <TableContainer component={Paper} sx={{ mb: 2 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\" style={{ width: '50px' }}>선택</TableCell>\n              <TableCell style={{ width: '120px' }}>썸네일</TableCell>\n              <TableCell style={{ width: '300px' }}>영상 정보</TableCell>\n              <TableCell>성과 지표</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {videos.map((video) => (\n              <React.Fragment key={video.url}>\n                <TableRow>\n                  <TableCell padding=\"checkbox\" rowSpan={2}>\n                    <Checkbox\n                      checked={selectedVideos[video.url] || false}\n                      onChange={() => handleVideoSelect(video.url)}\n                    />\n                  </TableCell>\n                  <TableCell rowSpan={2}>\n                    <img \n                      src={video.thumbnail} \n                      alt={video.title}\n                      style={{ width: '100px', height: '56px', objectFit: 'cover' }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {video.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      업로드: {video.publishedAt}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box sx={{ display: 'flex', gap: 2 }}>\n                      <Chip \n                        label={`조회수: ${video.performance?.views || '미달'}`}\n                        color={getPerformanceColor(video.performance?.views)}\n                        variant=\"outlined\"\n                      />\n                      <Chip \n                        label={`좋아요: ${video.performance?.likes || '미달'}`}\n                        color={getPerformanceColor(video.performance?.likes)}\n                        variant=\"outlined\"\n                      />\n                      <Chip \n                        label={`댓글: ${video.performance?.comments || '미달'}`}\n                        color={getPerformanceColor(video.performance?.comments)}\n                        variant=\"outlined\"\n                      />\n                    </Box>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={2}>\n                    <Box sx={{ px: 2, py: 1 }}>\n                      {products.map((product) => (\n                        <Box key={product.type} sx={{ mb: 2 }}>\n                          <Typography variant=\"body2\" gutterBottom>{product.name}</Typography>\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                            <Box sx={{ flex: 1 }}>\n                              <Slider\n                                disabled={!selectedVideos[video.url]}\n                                min={metrics[video.url]?.[`base${product.type}`] || 0}\n                                max={(metrics[video.url]?.[`base${product.type}`] || 0) + product.maxAmount}\n                                step={product.step}\n                                valueLabelDisplay=\"auto\"\n                                value={metrics[video.url]?.[product.type] || 0}\n                                onChange={(_, value) => \n                                  handleMetricChange(video.url, product.type, value as number)\n                                }\n                              />\n                            </Box>\n                            {selectedVideos[video.url] && (\n                              <Box sx={{ minWidth: 200 }}>\n                                <Typography variant=\"body2\">\n                                  증가량: {calculateMetricIncrease(video.url, product.type).toLocaleString()}\n                                  {product.type === 'views' ? '회' : '개'}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                  가격: ₩{calculateMetricPrice(video.url, product.type).toLocaleString()}\n                                </Typography>\n                              </Box>\n                            )}\n                          </Box>\n                        </Box>\n                      ))}\n                      {selectedVideos[video.url] && (\n                        <Box sx={{ mt: 1, textAlign: 'right' }}>\n                          <Typography variant=\"subtitle2\" color=\"primary\">\n                            영상 총액: ₩{(\n                              calculateMetricPrice(video.url, 'views') +\n                              calculateMetricPrice(video.url, 'likes') +\n                              calculateMetricPrice(video.url, 'comments')\n                            ).toLocaleString()}\n                          </Typography>\n                        </Box>\n                      )}\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              </React.Fragment>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Box sx={{ mt: 4, p: 2, bgcolor: 'background.paper' }}>\n        <Typography variant=\"h6\" gutterBottom>\n          견적서\n        </Typography>\n        <Typography>\n          구독자 늘리기: {subscriberCount.toLocaleString()}명 (₩{(subscriberCount * 1000).toLocaleString()})\n        </Typography>\n        {Object.entries(selectedVideos).map(([url, isSelected]) => {\n          if (isSelected && metrics[url]) {\n            const video = videos.find(v => v.url === url);\n            const viewsIncrease = calculateMetricIncrease(url, 'views');\n            const likesIncrease = calculateMetricIncrease(url, 'likes');\n            const commentsIncrease = calculateMetricIncrease(url, 'comments');\n            const totalPrice = \n              calculateMetricPrice(url, 'views') +\n              calculateMetricPrice(url, 'likes') +\n              calculateMetricPrice(url, 'comments');\n\n            return (\n              <Box key={url} sx={{ mt: 1 }}>\n                <Typography variant=\"subtitle1\">{video?.title}</Typography>\n                <Typography variant=\"body2\" sx={{ ml: 2 }}>\n                  조회수: +{viewsIncrease.toLocaleString()}회 (₩{calculateMetricPrice(url, 'views').toLocaleString()})\n                </Typography>\n                <Typography variant=\"body2\" sx={{ ml: 2 }}>\n                  좋아요: +{likesIncrease.toLocaleString()}개 (₩{calculateMetricPrice(url, 'likes').toLocaleString()})\n                </Typography>\n                <Typography variant=\"body2\" sx={{ ml: 2 }}>\n                  댓글: +{commentsIncrease.toLocaleString()}개 (₩{calculateMetricPrice(url, 'comments').toLocaleString()})\n                </Typography>\n                <Typography variant=\"body2\" sx={{ ml: 2 }}>\n                  가격: ₩{totalPrice.toLocaleString()}\n                </Typography>\n              </Box>\n            );\n          }\n          return null;\n        })}\n        <Typography variant=\"h6\" sx={{ mt: 2 }}>\n          총 견적: ₩{calculateTotal().toLocaleString()}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}