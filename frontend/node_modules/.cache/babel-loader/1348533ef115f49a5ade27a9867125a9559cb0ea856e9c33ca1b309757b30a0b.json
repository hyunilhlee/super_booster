{"ast":null,"code":"var _jsxFileName = \"/Users/hyunillee/Projects/analysis_youtube/frontend/src/components/products/ProductSelection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Checkbox, Slider, FormControlLabel, Paper, Grid, Card, CardContent, Radio, RadioGroup, Divider, Chip, CardMedia } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst packages = [{\n  name: 'BASIC 패키지',\n  price: 100000,\n  count: 0,\n  formula: {\n    views: v => 20,\n    likes: l => 15,\n    comments: c => 10\n  }\n}, {\n  name: 'STANDARD 패키지',\n  price: 200000,\n  count: 0,\n  formula: {\n    views: v => 40,\n    likes: l => 30,\n    comments: c => 20\n  }\n}, {\n  name: 'PREMIUM 패키지',\n  price: 300000,\n  count: 0,\n  formula: {\n    views: v => 60,\n    likes: l => 45,\n    comments: c => 30\n  }\n}, {\n  name: 'VIP 패키지',\n  price: 500000,\n  count: 0,\n  formula: {\n    views: v => 100,\n    likes: l => 80,\n    comments: c => 50\n  }\n}];\nconst getSubscriberRange = subscriberCount => {\n  if (subscriberCount < 1000) {\n    return {\n      Pm: 0.05,\n      PM: 0.1,\n      Qm: 0.005,\n      QM: 0.015\n    };\n  } else if (subscriberCount < 10000) {\n    return {\n      Pm: 0.04,\n      PM: 0.08,\n      Qm: 0.004,\n      QM: 0.01\n    };\n  } else if (subscriberCount < 100000) {\n    return {\n      Pm: 0.03,\n      PM: 0.06,\n      Qm: 0.003,\n      QM: 0.008\n    };\n  } else if (subscriberCount < 500000) {\n    return {\n      Pm: 0.02,\n      PM: 0.05,\n      Qm: 0.002,\n      QM: 0.006\n    };\n  } else if (subscriberCount < 1000000) {\n    return {\n      Pm: 0.015,\n      PM: 0.04,\n      Qm: 0.002,\n      QM: 0.005\n    };\n  } else {\n    return {\n      Pm: 0.01,\n      PM: 0.03,\n      Qm: 0.001,\n      QM: 0.003\n    };\n  }\n};\nconst calculatePackageMultiplier = (packageName, metric, range) => {\n  const {\n    Pm,\n    PM,\n    Qm,\n    QM\n  } = range;\n  switch (packageName) {\n    case 'BASIC 패키지':\n      return metric === 'comments' ? Qm : Pm;\n    case 'STANDARD 패키지':\n      return metric === 'comments' ? (Qm + QM) / 2 : (Pm + PM) / 2;\n    case 'PREMIUM 패키지':\n      return metric === 'comments' ? QM : PM;\n    case 'VIP 패키지':\n      return metric === 'comments' ? (3 * QM - Qm) / 2 : (3 * PM - Pm) / 2;\n    default:\n      return 0;\n  }\n};\nconst ProductSelection = ({\n  videos,\n  onProductSelect\n}) => {\n  _s();\n  const [selectedVideos, setSelectedVideos] = useState({});\n  const [videoPackages, setVideoPackages] = useState({});\n  const [videoMetrics, setVideoMetrics] = useState({});\n  const [packageCounts, setPackageCounts] = useState(packages);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [videoTotals, setVideoTotals] = useState({});\n  const [subscriberCount, setSubscriberCount] = useState(1000);\n  const [isSubscriberSelected, setIsSubscriberSelected] = useState(false);\n  const getPackageIncreaseRange = packageName => {\n    switch (packageName) {\n      case 'BASIC 패키지':\n        return {\n          min: 20,\n          max: 50\n        };\n      case 'STANDARD 패키지':\n        return {\n          min: 50,\n          max: 100\n        };\n      case 'PREMIUM 패키지':\n        return {\n          min: 100,\n          max: 200\n        };\n      case 'VIP 패키지':\n        return {\n          min: 200,\n          max: 500\n        };\n      default:\n        return {\n          min: 0,\n          max: 50\n        };\n    }\n  };\n  const calculateMetricIncrease = (videoTitle, metric) => {\n    var _videoMetrics$videoTi;\n    const video = videos.find(v => v.title === videoTitle);\n    if (!(video !== null && video !== void 0 && video.statistics)) return 0;\n    const metricMap = {\n      views: 'viewCount',\n      likes: 'likeCount',\n      comments: 'commentCount'\n    };\n    const currentValue = parseInt(video.statistics[metricMap[metric]]);\n    const percentage = ((_videoMetrics$videoTi = videoMetrics[videoTitle]) === null || _videoMetrics$videoTi === void 0 ? void 0 : _videoMetrics$videoTi[metric]) || 0;\n    const packageName = videoPackages[videoTitle];\n    if (packageName) {\n      const range = getPackageIncreaseRange(packageName);\n      const actualPercentage = percentage / 100 * (range.max - range.min) + range.min;\n      return Math.round(currentValue * (actualPercentage / 100));\n    }\n    return Math.round(currentValue * (percentage / 100));\n  };\n  const handlePackageSelect = (videoTitle, packageName) => {\n    setVideoPackages(prev => ({\n      ...prev,\n      [videoTitle]: packageName\n    }));\n    const range = getPackageIncreaseRange(packageName);\n\n    // 패키지 선택 시 기본값을 최소값으로 설정\n    setVideoMetrics(prev => ({\n      ...prev,\n      [videoTitle]: {\n        views: 0,\n        // 슬라이더 초기값을 0으로 설정 (실제로는 range.min이 적용됨)\n        likes: 0,\n        comments: 0\n      }\n    }));\n  };\n  useEffect(() => {\n    // 패키지 카운트 계산\n    const counts = packages.map(pkg => ({\n      ...pkg,\n      count: Object.values(videoPackages).filter(p => p === pkg.name).length\n    }));\n    setPackageCounts(counts);\n\n    // 총상별 금액 및 총액 계산\n    const videoTotalAmounts = {};\n    const total = Object.entries(videoPackages).reduce((sum, [videoTitle, packageName]) => {\n      const pkg = counts.find(p => p.name === packageName);\n      const metrics = videoMetrics[videoTitle];\n      if (pkg && metrics) {\n        const videoTotal = calculateVideoTotal(videoTitle, packageName, metrics);\n        videoTotalAmounts[videoTitle] = videoTotal;\n        return sum + videoTotal;\n      }\n      return sum;\n    }, 0);\n\n    // 구독자 상품 금액 추가\n    const subscriberAmount = isSubscriberSelected ? subscriberCount * 500 : 0;\n    setVideoTotals(videoTotalAmounts);\n    setTotalAmount(total + subscriberAmount);\n  }, [videoPackages, videoMetrics, subscriberCount, isSubscriberSelected]);\n  const calculateVideoTotal = (videoTitle, packageName, metrics) => {\n    const pkg = packages.find(p => p.name === packageName);\n    if (!pkg) return 0;\n    const viewsIncrease = pkg.formula.views(metrics.views);\n    const likesIncrease = pkg.formula.likes(metrics.likes);\n    const commentsIncrease = pkg.formula.comments(metrics.comments);\n    return pkg.price + (viewsIncrease + likesIncrease + commentsIncrease) * 10000;\n  };\n  const handleVideoSelect = videoTitle => {\n    setSelectedVideos(prev => ({\n      ...prev,\n      [videoTitle]: !prev[videoTitle]\n    }));\n    if (!videoMetrics[videoTitle]) {\n      setVideoMetrics(prev => ({\n        ...prev,\n        [videoTitle]: {\n          views: 0,\n          likes: 0,\n          comments: 0\n        }\n      }));\n    }\n  };\n  const handleMetricChange = (videoTitle, metric, value) => {\n    const video = videos.find(v => v.title === videoTitle);\n    if (!(video !== null && video !== void 0 && video.statistics)) return;\n    const subscriberCount = parseInt(video.statistics.subscriberCount || '1000');\n    const range = getSubscriberRange(subscriberCount);\n    const packageName = videoPackages[videoTitle];\n    if (packageName) {\n      const maxValue = calculatePackageMultiplier(packageName, metric, range) * 100;\n      const adjustedValue = Math.min(value, maxValue);\n      setVideoMetrics(prev => ({\n        ...prev,\n        [videoTitle]: {\n          ...prev[videoTitle],\n          [metric]: adjustedValue\n        }\n      }));\n    } else {\n      setVideoMetrics(prev => ({\n        ...prev,\n        [videoTitle]: {\n          ...prev[videoTitle],\n          [metric]: value\n        }\n      }));\n    }\n  };\n  const getPerformanceColor = level => {\n    switch (level) {\n      case '우수':\n        return 'primary';\n      case '적정':\n        return 'success';\n      case '미달':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) {\n        // ISO 형식이 아닌 경우 직접 파싱\n        const [year, month, day] = dateString.split('-').map(num => parseInt(num));\n        return new Date(year, month - 1, day).toLocaleDateString('ko-KR', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        });\n      }\n      return date.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    } catch (error) {\n      return dateString; // 파싱 실패 시 원본 문자열 반환\n    }\n  };\n  const calculateMetricTotal = (videoTitle, metric) => {\n    const video = videos.find(v => v.title === videoTitle);\n    if (!(video !== null && video !== void 0 && video.statistics)) return 0;\n    let currentValue = 0;\n    switch (metric) {\n      case 'views':\n        currentValue = parseInt(video.statistics.viewCount);\n        break;\n      case 'likes':\n        currentValue = parseInt(video.statistics.likeCount);\n        break;\n      case 'comments':\n        currentValue = parseInt(video.statistics.commentCount);\n        break;\n    }\n    const increase = calculateMetricIncrease(videoTitle, metric);\n    return currentValue + increase;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"1. \\uAD6C\\uB3C5\\uC790 \\uC218 \\uC99D\\uAC00 \\uB2E8\\uD488\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: isSubscriberSelected,\n            onChange: e => setIsSubscriberSelected(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this),\n          label: \"\\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"\\uBAA9\\uD45C \\uAD6C\\uB3C5\\uC790 \\uC218 \\uC124\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: subscriberCount,\n              onChange: (_, value) => setSubscriberCount(value),\n              min: 1000,\n              max: 100000,\n              step: 1000,\n              valueLabelDisplay: \"auto\",\n              valueLabelFormat: value => `${value.toLocaleString()}명`,\n              sx: {\n                width: '100%'\n              },\n              disabled: !isSubscriberSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [\"\\uC124\\uC815\\uB41C \\uAD6C\\uB3C5\\uC790 \\uC218: \", subscriberCount.toLocaleString(), \"\\uBA85\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary\",\n                children: [\"\\uAE08\\uC561: \\u20A9\", (isSubscriberSelected ? subscriberCount * 500 : 0).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"2. \\uC601\\uC0C1\\uBCC4 \\uD328\\uD0A4\\uC9C0 \\uC120\\uD0DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), videos.map((video, index) => {\n        var _videoMetrics$video$t, _video$statistics2, _videoMetrics$video$t2, _video$statistics4, _videoMetrics$video$t3, _video$statistics6, _videoTotals$video$ti;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outlined\",\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 2,\n                      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                        component: \"img\",\n                        image: video.thumbnail,\n                        alt: video.title,\n                        sx: {\n                          borderRadius: 1\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 9,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        children: video.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 412,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"text.secondary\",\n                        children: formatDate(video.publishedAt)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 413,\n                        columnNumber: 25\n                      }, this), video.performance && /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          mt: 1,\n                          display: 'flex',\n                          gap: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Chip, {\n                          label: `조회수: ${video.performance.views}`,\n                          color: getPerformanceColor(video.performance.views),\n                          size: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 418,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                          label: `좋아요: ${video.performance.likes}`,\n                          color: getPerformanceColor(video.performance.likes),\n                          size: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 423,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                          label: `댓글: ${video.performance.comments}`,\n                          color: getPerformanceColor(video.performance.comments),\n                          size: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 428,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 417,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 1,\n                      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: selectedVideos[video.title] || false,\n                        onChange: () => handleVideoSelect(video.title)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 437,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), selectedVideos[video.title] && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outlined\",\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: \"\\uD328\\uD0A4\\uC9C0 \\uC120\\uD0DD\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                    value: videoPackages[video.title] || '',\n                    onChange: e => handlePackageSelect(video.title, e.target.value),\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: packages.map(pkg => /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 3,\n                        children: /*#__PURE__*/_jsxDEV(Card, {\n                          variant: \"outlined\",\n                          children: /*#__PURE__*/_jsxDEV(CardContent, {\n                            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                              value: pkg.name,\n                              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 466,\n                                columnNumber: 46\n                              }, this),\n                              label: /*#__PURE__*/_jsxDEV(Box, {\n                                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                  variant: \"subtitle2\",\n                                  children: pkg.name\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 469,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                  variant: \"body2\",\n                                  color: \"text.secondary\",\n                                  children: [\"\\u20A9\", pkg.price.toLocaleString()]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 470,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 468,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 464,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 463,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 462,\n                          columnNumber: 31\n                        }, this)\n                      }, pkg.name, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 3\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      gutterBottom: true,\n                      children: \"\\uC138\\uBD80 \\uC9C0\\uD45C \\uC124\\uC815\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          gutterBottom: true,\n                          children: \"\\uC870\\uD68C\\uC218 \\uC99D\\uAC00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 489,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                          value: ((_videoMetrics$video$t = videoMetrics[video.title]) === null || _videoMetrics$video$t === void 0 ? void 0 : _videoMetrics$video$t.views) || 0,\n                          onChange: (_, value) => handleMetricChange(video.title, 'views', value),\n                          min: 0,\n                          max: 100,\n                          valueLabelDisplay: \"auto\",\n                          valueLabelFormat: value => {\n                            var _video$statistics;\n                            const increase = calculateMetricIncrease(video.title, 'views');\n                            const currentValue = parseInt(((_video$statistics = video.statistics) === null || _video$statistics === void 0 ? void 0 : _video$statistics.viewCount) || '0');\n                            const percentage = (increase / currentValue * 100).toFixed(1);\n                            return `+${increase.toLocaleString()}회 (${percentage}%)`;\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 490,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            mt: 1\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body2\",\n                            color: \"text.secondary\",\n                            children: [\"\\uD604\\uC7AC: \", parseInt(((_video$statistics2 = video.statistics) === null || _video$statistics2 === void 0 ? void 0 : _video$statistics2.viewCount) || '0').toLocaleString(), \"\\uD68C\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 504,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body2\",\n                            color: \"primary\",\n                            children: [\"\\uC608\\uC0C1: \", calculateMetricTotal(video.title, 'views').toLocaleString(), \"\\uD68C\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 507,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 503,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 488,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          gutterBottom: true,\n                          children: \"\\uC88B\\uC544\\uC694 \\uC99D\\uAC00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 513,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                          value: ((_videoMetrics$video$t2 = videoMetrics[video.title]) === null || _videoMetrics$video$t2 === void 0 ? void 0 : _videoMetrics$video$t2.likes) || 0,\n                          onChange: (_, value) => handleMetricChange(video.title, 'likes', value),\n                          min: 0,\n                          max: 100,\n                          valueLabelDisplay: \"auto\",\n                          valueLabelFormat: value => {\n                            var _video$statistics3;\n                            const increase = calculateMetricIncrease(video.title, 'likes');\n                            const currentValue = parseInt(((_video$statistics3 = video.statistics) === null || _video$statistics3 === void 0 ? void 0 : _video$statistics3.likeCount) || '0');\n                            const percentage = (increase / currentValue * 100).toFixed(1);\n                            return `+${increase.toLocaleString()}개 (${percentage}%)`;\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 514,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            mt: 1\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body2\",\n                            color: \"text.secondary\",\n                            children: [\"\\uD604\\uC7AC: \", parseInt(((_video$statistics4 = video.statistics) === null || _video$statistics4 === void 0 ? void 0 : _video$statistics4.likeCount) || '0').toLocaleString(), \"\\uAC1C\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 528,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body2\",\n                            color: \"primary\",\n                            children: [\"\\uC608\\uC0C1: \", calculateMetricTotal(video.title, 'likes').toLocaleString(), \"\\uAC1C\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 531,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 527,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          gutterBottom: true,\n                          children: \"\\uB313\\uAE00 \\uC99D\\uAC00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 537,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                          value: ((_videoMetrics$video$t3 = videoMetrics[video.title]) === null || _videoMetrics$video$t3 === void 0 ? void 0 : _videoMetrics$video$t3.comments) || 0,\n                          onChange: (_, value) => handleMetricChange(video.title, 'comments', value),\n                          min: 0,\n                          max: 100,\n                          valueLabelDisplay: \"auto\",\n                          valueLabelFormat: value => {\n                            var _video$statistics5;\n                            const increase = calculateMetricIncrease(video.title, 'comments');\n                            const currentValue = parseInt(((_video$statistics5 = video.statistics) === null || _video$statistics5 === void 0 ? void 0 : _video$statistics5.commentCount) || '0');\n                            const percentage = (increase / currentValue * 100).toFixed(1);\n                            return `+${increase.toLocaleString()}개 (${percentage}%)`;\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 538,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            mt: 1\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body2\",\n                            color: \"text.secondary\",\n                            children: [\"\\uD604\\uC7AC: \", parseInt(((_video$statistics6 = video.statistics) === null || _video$statistics6 === void 0 ? void 0 : _video$statistics6.commentCount) || '0').toLocaleString(), \"\\uAC1C\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 552,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body2\",\n                            color: \"primary\",\n                            children: [\"\\uC608\\uC0C1: \", calculateMetricTotal(video.title, 'comments').toLocaleString(), \"\\uAC1C\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 555,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 551,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 3,\n                      textAlign: 'right'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"primary\",\n                      children: [\"\\uC601\\uC0C1 \\uCD1D\\uC561: \\u20A9\", ((_videoTotals$video$ti = videoTotals[video.title]) === null || _videoTotals$video$ti === void 0 ? void 0 : _videoTotals$video$ti.toLocaleString()) || '0']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), index < videos.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 43\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"\\uC120\\uD0DD\\uD55C \\uD328\\uD0A4\\uC9C0 \\uC694\\uC57D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: packageCounts.map(pkg => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: pkg.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [pkg.count, \"\\uAC1C \\uC120\\uD0DD\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"primary\",\n                  children: [\"\\u20A9\", (pkg.price * pkg.count).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this)\n          }, pkg.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            textAlign: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"primary\",\n            children: [\"\\uCD1D \\uAE08\\uC561: \\u20A9\", totalAmount.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductSelection, \"pv+Ngpx+j60nmp2mQOC5mUL0tUo=\");\n_c = ProductSelection;\nexport default ProductSelection;\nvar _c;\n$RefreshReg$(_c, \"ProductSelection\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Checkbox","Slider","FormControlLabel","Paper","Grid","Card","CardContent","Radio","RadioGroup","Divider","Chip","CardMedia","jsxDEV","_jsxDEV","packages","name","price","count","formula","views","v","likes","l","comments","c","getSubscriberRange","subscriberCount","Pm","PM","Qm","QM","calculatePackageMultiplier","packageName","metric","range","ProductSelection","videos","onProductSelect","_s","selectedVideos","setSelectedVideos","videoPackages","setVideoPackages","videoMetrics","setVideoMetrics","packageCounts","setPackageCounts","totalAmount","setTotalAmount","videoTotals","setVideoTotals","setSubscriberCount","isSubscriberSelected","setIsSubscriberSelected","getPackageIncreaseRange","min","max","calculateMetricIncrease","videoTitle","_videoMetrics$videoTi","video","find","title","statistics","metricMap","currentValue","parseInt","percentage","actualPercentage","Math","round","handlePackageSelect","prev","counts","map","pkg","Object","values","filter","p","length","videoTotalAmounts","total","entries","reduce","sum","metrics","videoTotal","calculateVideoTotal","subscriberAmount","viewsIncrease","likesIncrease","commentsIncrease","handleVideoSelect","handleMetricChange","value","maxValue","adjustedValue","getPerformanceColor","level","formatDate","dateString","date","Date","isNaN","getTime","year","month","day","split","num","toLocaleDateString","error","calculateMetricTotal","viewCount","likeCount","commentCount","increase","children","elevation","sx","mb","display","alignItems","variant","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","control","checked","onChange","e","target","label","mt","container","spacing","item","xs","gutterBottom","_","step","valueLabelDisplay","valueLabelFormat","toLocaleString","width","disabled","justifyContent","color","index","_videoMetrics$video$t","_video$statistics2","_videoMetrics$video$t2","_video$statistics4","_videoMetrics$video$t3","_video$statistics6","_videoTotals$video$ti","component","image","thumbnail","alt","borderRadius","publishedAt","performance","gap","size","_video$statistics","toFixed","_video$statistics3","_video$statistics5","textAlign","my","_c","$RefreshReg$"],"sources":["/Users/hyunillee/Projects/analysis_youtube/frontend/src/components/products/ProductSelection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Checkbox,\n  Slider,\n  FormControlLabel,\n  Paper,\n  Grid,\n  Card,\n  CardContent,\n  Radio,\n  RadioGroup,\n  Divider,\n  Chip,\n  CardMedia\n} from '@mui/material';\n\ninterface Video {\n  title: string;\n  publishedAt: string;\n  thumbnail: string;\n  performance?: {\n    views: string;\n    likes: string;\n    comments: string;\n  };\n  statistics?: {\n    viewCount: string;\n    likeCount: string;\n    commentCount: string;\n    subscriberCount?: string;\n  };\n}\n\ninterface ProductSelectionProps {\n  videos: Video[];\n  onProductSelect: (selection: any) => void;\n}\n\ninterface PackageType {\n  name: string;\n  price: number;\n  count: number;\n  formula: {\n    views: (v: number) => number;\n    likes: (l: number) => number;\n    comments: (c: number) => number;\n  };\n}\n\nconst packages: PackageType[] = [\n  { \n    name: 'BASIC 패키지', \n    price: 100000, \n    count: 0,\n    formula: {\n      views: (v: number) => 20,\n      likes: (l: number) => 15,\n      comments: (c: number) => 10\n    }\n  },\n  { \n    name: 'STANDARD 패키지', \n    price: 200000, \n    count: 0,\n    formula: {\n      views: (v: number) => 40,\n      likes: (l: number) => 30,\n      comments: (c: number) => 20\n    }\n  },\n  { \n    name: 'PREMIUM 패키지', \n    price: 300000, \n    count: 0,\n    formula: {\n      views: (v: number) => 60,\n      likes: (l: number) => 45,\n      comments: (c: number) => 30\n    }\n  },\n  { \n    name: 'VIP 패키지', \n    price: 500000, \n    count: 0,\n    formula: {\n      views: (v: number) => 100,\n      likes: (l: number) => 80,\n      comments: (c: number) => 50\n    }\n  },\n];\n\ninterface RangeValues {\n  Pm: number;\n  PM: number;\n  Qm: number;\n  QM: number;\n}\n\nconst getSubscriberRange = (subscriberCount: number): RangeValues => {\n  if (subscriberCount < 1000) {\n    return { Pm: 0.05, PM: 0.1, Qm: 0.005, QM: 0.015 };\n  } else if (subscriberCount < 10000) {\n    return { Pm: 0.04, PM: 0.08, Qm: 0.004, QM: 0.01 };\n  } else if (subscriberCount < 100000) {\n    return { Pm: 0.03, PM: 0.06, Qm: 0.003, QM: 0.008 };\n  } else if (subscriberCount < 500000) {\n    return { Pm: 0.02, PM: 0.05, Qm: 0.002, QM: 0.006 };\n  } else if (subscriberCount < 1000000) {\n    return { Pm: 0.015, PM: 0.04, Qm: 0.002, QM: 0.005 };\n  } else {\n    return { Pm: 0.01, PM: 0.03, Qm: 0.001, QM: 0.003 };\n  }\n};\n\nconst calculatePackageMultiplier = (packageName: string, metric: 'views' | 'likes' | 'comments', range: RangeValues) => {\n  const { Pm, PM, Qm, QM } = range;\n  \n  switch (packageName) {\n    case 'BASIC 패키지':\n      return metric === 'comments' ? Qm : Pm;\n    case 'STANDARD 패키지':\n      return metric === 'comments' ? (Qm + QM) / 2 : (Pm + PM) / 2;\n    case 'PREMIUM 패키지':\n      return metric === 'comments' ? QM : PM;\n    case 'VIP 패키지':\n      return metric === 'comments' ? (3 * QM - Qm) / 2 : (3 * PM - Pm) / 2;\n    default:\n      return 0;\n  }\n};\n\nconst ProductSelection: React.FC<ProductSelectionProps> = ({ videos, onProductSelect }) => {\n  const [selectedVideos, setSelectedVideos] = useState<{ [key: string]: boolean }>({});\n  const [videoPackages, setVideoPackages] = useState<{ [key: string]: string }>({});\n  const [videoMetrics, setVideoMetrics] = useState<{\n    [key: string]: {\n      views: number;\n      likes: number;\n      comments: number;\n    };\n  }>({});\n  const [packageCounts, setPackageCounts] = useState<PackageType[]>(packages);\n  const [totalAmount, setTotalAmount] = useState<number>(0);\n  const [videoTotals, setVideoTotals] = useState<{ [key: string]: number }>({});\n  const [subscriberCount, setSubscriberCount] = useState<number>(1000);\n  const [isSubscriberSelected, setIsSubscriberSelected] = useState<boolean>(false);\n\n  const getPackageIncreaseRange = (packageName: string): { min: number; max: number } => {\n    switch (packageName) {\n      case 'BASIC 패키지':\n        return { min: 20, max: 50 };\n      case 'STANDARD 패키지':\n        return { min: 50, max: 100 };\n      case 'PREMIUM 패키지':\n        return { min: 100, max: 200 };\n      case 'VIP 패키지':\n        return { min: 200, max: 500 };\n      default:\n        return { min: 0, max: 50 };\n    }\n  };\n\n  const calculateMetricIncrease = (videoTitle: string, metric: 'views' | 'likes' | 'comments') => {\n    const video = videos.find(v => v.title === videoTitle);\n    if (!video?.statistics) return 0;\n    \n    const metricMap = {\n      views: 'viewCount',\n      likes: 'likeCount',\n      comments: 'commentCount'\n    } as const;\n    \n    const currentValue = parseInt(video.statistics[metricMap[metric]]);\n    const percentage = videoMetrics[videoTitle]?.[metric] || 0;\n    const packageName = videoPackages[videoTitle];\n    \n    if (packageName) {\n      const range = getPackageIncreaseRange(packageName);\n      const actualPercentage = (percentage / 100) * (range.max - range.min) + range.min;\n      return Math.round(currentValue * (actualPercentage / 100));\n    }\n    \n    return Math.round(currentValue * (percentage / 100));\n  };\n\n  const handlePackageSelect = (videoTitle: string, packageName: string) => {\n    setVideoPackages(prev => ({\n      ...prev,\n      [videoTitle]: packageName\n    }));\n\n    const range = getPackageIncreaseRange(packageName);\n    \n    // 패키지 선택 시 기본값을 최소값으로 설정\n    setVideoMetrics(prev => ({\n      ...prev,\n      [videoTitle]: {\n        views: 0, // 슬라이더 초기값을 0으로 설정 (실제로는 range.min이 적용됨)\n        likes: 0,\n        comments: 0\n      }\n    }));\n  };\n\n  useEffect(() => {\n    // 패키지 카운트 계산\n    const counts = packages.map(pkg => ({\n      ...pkg,\n      count: Object.values(videoPackages).filter(p => p === pkg.name).length\n    }));\n    setPackageCounts(counts);\n\n    // 총상별 금액 및 총액 계산\n    const videoTotalAmounts: { [key: string]: number } = {};\n    const total = Object.entries(videoPackages).reduce((sum, [videoTitle, packageName]) => {\n      const pkg = counts.find(p => p.name === packageName);\n      const metrics = videoMetrics[videoTitle];\n      if (pkg && metrics) {\n        const videoTotal = calculateVideoTotal(videoTitle, packageName, metrics);\n        videoTotalAmounts[videoTitle] = videoTotal;\n        return sum + videoTotal;\n      }\n      return sum;\n    }, 0);\n\n    // 구독자 상품 금액 추가\n    const subscriberAmount = isSubscriberSelected ? subscriberCount * 500 : 0;\n    \n    setVideoTotals(videoTotalAmounts);\n    setTotalAmount(total + subscriberAmount);\n  }, [videoPackages, videoMetrics, subscriberCount, isSubscriberSelected]);\n\n  const calculateVideoTotal = (videoTitle: string, packageName: string, metrics: any) => {\n    const pkg = packages.find(p => p.name === packageName);\n    if (!pkg) return 0;\n\n    const viewsIncrease = pkg.formula.views(metrics.views);\n    const likesIncrease = pkg.formula.likes(metrics.likes);\n    const commentsIncrease = pkg.formula.comments(metrics.comments);\n\n    return pkg.price + ((viewsIncrease + likesIncrease + commentsIncrease) * 10000);\n  };\n\n  const handleVideoSelect = (videoTitle: string) => {\n    setSelectedVideos(prev => ({\n      ...prev,\n      [videoTitle]: !prev[videoTitle]\n    }));\n    if (!videoMetrics[videoTitle]) {\n      setVideoMetrics(prev => ({\n        ...prev,\n        [videoTitle]: { views: 0, likes: 0, comments: 0 }\n      }));\n    }\n  };\n\n  const handleMetricChange = (videoTitle: string, metric: 'views' | 'likes' | 'comments', value: number) => {\n    const video = videos.find(v => v.title === videoTitle);\n    if (!video?.statistics) return;\n\n    const subscriberCount = parseInt(video.statistics.subscriberCount || '1000');\n    const range = getSubscriberRange(subscriberCount);\n    const packageName = videoPackages[videoTitle];\n    \n    if (packageName) {\n      const maxValue = calculatePackageMultiplier(packageName, metric, range) * 100;\n      const adjustedValue = Math.min(value, maxValue);\n      \n      setVideoMetrics(prev => ({\n        ...prev,\n        [videoTitle]: {\n          ...prev[videoTitle],\n          [metric]: adjustedValue\n        }\n      }));\n    } else {\n      setVideoMetrics(prev => ({\n        ...prev,\n        [videoTitle]: {\n          ...prev[videoTitle],\n          [metric]: value\n        }\n      }));\n    }\n  };\n\n  const getPerformanceColor = (level: string) => {\n    switch (level) {\n      case '우수': return 'primary';\n      case '적정': return 'success';\n      case '미달': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) {\n        // ISO 형식이 아닌 경우 직접 파싱\n        const [year, month, day] = dateString.split('-').map(num => parseInt(num));\n        return new Date(year, month - 1, day).toLocaleDateString('ko-KR', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        });\n      }\n      return date.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    } catch (error) {\n      return dateString; // 파싱 실패 시 원본 문자열 반환\n    }\n  };\n\n  const calculateMetricTotal = (videoTitle: string, metric: 'views' | 'likes' | 'comments') => {\n    const video = videos.find(v => v.title === videoTitle);\n    if (!video?.statistics) return 0;\n    \n    let currentValue = 0;\n    switch (metric) {\n      case 'views':\n        currentValue = parseInt(video.statistics.viewCount);\n        break;\n      case 'likes':\n        currentValue = parseInt(video.statistics.likeCount);\n        break;\n      case 'comments':\n        currentValue = parseInt(video.statistics.commentCount);\n        break;\n    }\n    \n    const increase = calculateMetricIncrease(videoTitle, metric);\n    return currentValue + increase;\n  };\n\n  return (\n    <Box>\n      {/* 구독자 단품 상품 */}\n      <Paper elevation={3} sx={{ p: 3, mb: 4 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            1. 구독자 수 증가 단품\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSubscriberSelected}\n                onChange={(e) => setIsSubscriberSelected(e.target.checked)}\n              />\n            }\n            label=\"선택\"\n          />\n        </Box>\n        <Box sx={{ mt: 2 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography gutterBottom>목표 구독자 수 설정</Typography>\n              <Slider\n                value={subscriberCount}\n                onChange={(_, value) => setSubscriberCount(value as number)}\n                min={1000}\n                max={100000}\n                step={1000}\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => `${value.toLocaleString()}명`}\n                sx={{ width: '100%' }}\n                disabled={!isSubscriberSelected}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n                <Typography variant=\"body1\">\n                  설정된 구독자 수: {subscriberCount.toLocaleString()}명\n                </Typography>\n                <Typography variant=\"h6\" color=\"primary\">\n                  금액: ₩{(isSubscriberSelected ? subscriberCount * 500 : 0).toLocaleString()}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n\n      {/* 영상별 패키지 상품 */}\n      <Paper elevation={3} sx={{ p: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          2. 영상별 패키지 선택\n        </Typography>\n        {videos.map((video, index) => (\n          <Box key={index} sx={{ mb: 4 }}>\n            <Grid container spacing={2}>\n              {/* 첫 번째 줄: 썸네일, 제목, 날짜, 체크박스 */}\n              <Grid item xs={12}>\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Grid container spacing={2} alignItems=\"center\">\n                      <Grid item xs={2}>\n                        <CardMedia\n                          component=\"img\"\n                          image={video.thumbnail}\n                          alt={video.title}\n                          sx={{ borderRadius: 1 }}\n                        />\n                      </Grid>\n                      <Grid item xs={9}>\n                        <Typography variant=\"h6\">{video.title}</Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {formatDate(video.publishedAt)}\n                        </Typography>\n                        {video.performance && (\n                          <Box sx={{ mt: 1, display: 'flex', gap: 1 }}>\n                            <Chip \n                              label={`조회수: ${video.performance.views}`}\n                              color={getPerformanceColor(video.performance.views)}\n                              size=\"small\"\n                            />\n                            <Chip \n                              label={`좋아요: ${video.performance.likes}`}\n                              color={getPerformanceColor(video.performance.likes)}\n                              size=\"small\"\n                            />\n                            <Chip \n                              label={`댓글: ${video.performance.comments}`}\n                              color={getPerformanceColor(video.performance.comments)}\n                              size=\"small\"\n                            />\n                          </Box>\n                        )}\n                      </Grid>\n                      <Grid item xs={1}>\n                        <Checkbox\n                          checked={selectedVideos[video.title] || false}\n                          onChange={() => handleVideoSelect(video.title)}\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </Grid>\n\n              {/* 두 번째 줄: 패키지 선택 및 슬라이더 */}\n              {selectedVideos[video.title] && (\n                <Grid item xs={12}>\n                  <Card variant=\"outlined\">\n                    <CardContent>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        패키지 선택\n                      </Typography>\n                      <RadioGroup\n                        value={videoPackages[video.title] || ''}\n                        onChange={(e) => handlePackageSelect(video.title, e.target.value)}\n                      >\n                        <Grid container spacing={2}>\n                          {packages.map((pkg) => (\n                            <Grid item xs={3} key={pkg.name}>\n                              <Card variant=\"outlined\">\n                                <CardContent>\n                                  <FormControlLabel\n                                    value={pkg.name}\n                                    control={<Radio />}\n                                    label={\n                                      <Box>\n                                        <Typography variant=\"subtitle2\">{pkg.name}</Typography>\n                                        <Typography variant=\"body2\" color=\"text.secondary\">\n                                          ₩{pkg.price.toLocaleString()}\n                                        </Typography>\n                                      </Box>\n                                    }\n                                  />\n                                </CardContent>\n                              </Card>\n                            </Grid>\n                          ))}\n                        </Grid>\n                      </RadioGroup>\n\n                      <Box sx={{ mt: 3 }}>\n                        <Typography variant=\"subtitle1\" gutterBottom>\n                          세부 지표 설정\n                        </Typography>\n                        <Grid container spacing={2}>\n                          <Grid item xs={4}>\n                            <Typography gutterBottom>조회수 증가</Typography>\n                            <Slider\n                              value={videoMetrics[video.title]?.views || 0}\n                              onChange={(_, value) => handleMetricChange(video.title, 'views', value as number)}\n                              min={0}\n                              max={100}\n                              valueLabelDisplay=\"auto\"\n                              valueLabelFormat={(value) => {\n                                const increase = calculateMetricIncrease(video.title, 'views');\n                                const currentValue = parseInt(video.statistics?.viewCount || '0');\n                                const percentage = (increase / currentValue * 100).toFixed(1);\n                                return `+${increase.toLocaleString()}회 (${percentage}%)`;\n                              }}\n                            />\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                현재: {parseInt(video.statistics?.viewCount || '0').toLocaleString()}회\n                              </Typography>\n                              <Typography variant=\"body2\" color=\"primary\">\n                                예상: {calculateMetricTotal(video.title, 'views').toLocaleString()}회\n                              </Typography>\n                            </Box>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <Typography gutterBottom>좋아요 증가</Typography>\n                            <Slider\n                              value={videoMetrics[video.title]?.likes || 0}\n                              onChange={(_, value) => handleMetricChange(video.title, 'likes', value as number)}\n                              min={0}\n                              max={100}\n                              valueLabelDisplay=\"auto\"\n                              valueLabelFormat={(value) => {\n                                const increase = calculateMetricIncrease(video.title, 'likes');\n                                const currentValue = parseInt(video.statistics?.likeCount || '0');\n                                const percentage = (increase / currentValue * 100).toFixed(1);\n                                return `+${increase.toLocaleString()}개 (${percentage}%)`;\n                              }}\n                            />\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                현재: {parseInt(video.statistics?.likeCount || '0').toLocaleString()}개\n                              </Typography>\n                              <Typography variant=\"body2\" color=\"primary\">\n                                예상: {calculateMetricTotal(video.title, 'likes').toLocaleString()}개\n                              </Typography>\n                            </Box>\n                          </Grid>\n                          <Grid item xs={4}>\n                            <Typography gutterBottom>댓글 증가</Typography>\n                            <Slider\n                              value={videoMetrics[video.title]?.comments || 0}\n                              onChange={(_, value) => handleMetricChange(video.title, 'comments', value as number)}\n                              min={0}\n                              max={100}\n                              valueLabelDisplay=\"auto\"\n                              valueLabelFormat={(value) => {\n                                const increase = calculateMetricIncrease(video.title, 'comments');\n                                const currentValue = parseInt(video.statistics?.commentCount || '0');\n                                const percentage = (increase / currentValue * 100).toFixed(1);\n                                return `+${increase.toLocaleString()}개 (${percentage}%)`;\n                              }}\n                            />\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                현재: {parseInt(video.statistics?.commentCount || '0').toLocaleString()}개\n                              </Typography>\n                              <Typography variant=\"body2\" color=\"primary\">\n                                예상: {calculateMetricTotal(video.title, 'comments').toLocaleString()}개\n                              </Typography>\n                            </Box>\n                          </Grid>\n                        </Grid>\n                      </Box>\n\n                      {/* 영상별 금액 표시 */}\n                      <Box sx={{ mt: 3, textAlign: 'right' }}>\n                        <Typography variant=\"h6\" color=\"primary\">\n                          영상 총액: ₩{videoTotals[video.title]?.toLocaleString() || '0'}\n                        </Typography>\n                      </Box>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              )}\n            </Grid>\n            {index < videos.length - 1 && <Divider sx={{ my: 3 }} />}\n          </Box>\n        ))}\n\n        {/* 패키지 요약 및 총액 */}\n        <Box sx={{ mt: 4 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            선택한 패키지 요약\n          </Typography>\n          <Grid container spacing={2}>\n            {packageCounts.map((pkg) => (\n              <Grid item xs={3} key={pkg.name}>\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Typography variant=\"subtitle1\">{pkg.name}</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {pkg.count}개 선택\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"primary\">\n                      ₩{(pkg.price * pkg.count).toLocaleString()}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n\n          <Box sx={{ mt: 3, textAlign: 'right' }}>\n            <Typography variant=\"h5\" color=\"primary\">\n              총 금액: ₩{totalAmount.toLocaleString()}\n            </Typography>\n          </Box>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default ProductSelection; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}