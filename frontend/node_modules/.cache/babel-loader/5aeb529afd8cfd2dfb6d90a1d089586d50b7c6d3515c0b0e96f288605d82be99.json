{"ast":null,"code":"var _jsxFileName = \"/Users/hyunillee/Projects/analysis_youtube/frontend/src/components/channel/ChannelInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, Typography, Paper, CircularProgress, Alert, Grid, Link, Card, CardContent, CardMedia } from '@mui/material';\nimport { YouTube } from '@mui/icons-material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// API URL 설정\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4001/api';\nconst ChannelInput = ({\n  onAnalyze\n}) => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [channelInfo, setChannelInfo] = useState(null);\n\n  // 채널 분석 가능 여부 확인 함수\n  const checkChannelEligibility = videos => {\n    const now = new Date();\n    const oneMonthAgo = new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n    const threeMonthsAgo = new Date(now.getFullYear(), now.getMonth() - 3, now.getDate());\n\n    // 날짜 문자열을 Date 객체로 변환하는 함수\n    const parseDate = dateStr => {\n      const match = dateStr.match(/(\\d{4})년 (\\d{1,2})월 (\\d{1,2})일/);\n      if (match) {\n        const [, year, month, day] = match;\n        return new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n      }\n      return new Date();\n    };\n    const recentVideos = videos.map(video => {\n      const date = parseDate(video.publishedAt);\n      return {\n        ...video,\n        date\n      };\n    });\n    const videosInThreeMonths = recentVideos.filter(video => video.date >= threeMonthsAgo);\n    const videosInOneMonth = recentVideos.filter(video => video.date >= oneMonthAgo);\n    return {\n      isEligible: videosInThreeMonths.length >= 5 && videosInOneMonth.length >= 1,\n      videosInThreeMonths: videosInThreeMonths.length,\n      videosInOneMonth: videosInOneMonth.length\n    };\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    setChannelInfo(null);\n\n    // URL 패턴 검증 (@username 형식도 허용)\n    const urlPattern = /^(https?:\\/\\/)?(www\\.)?youtube\\.com\\/@[^/?]+/;\n    const videoPattern = /^(https?:\\/\\/)?(www\\.)?youtube\\.com\\/watch\\?v=[^&]+/;\n    if (!urlPattern.test(url) && !videoPattern.test(url)) {\n      setError('올바른 유튜브 채널 URL을 입력해주세요. (예: https://youtube.com/@channelname)');\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.get(`${API_URL}/channel`, {\n        params: {\n          url\n        }\n      });\n      setChannelInfo(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || '채널 정보를 가져오는데 실패했습니다.');\n      console.error('Error fetching channel info:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnalyze = () => {\n    if (!channelInfo) return;\n\n    // 채널 데이터 형식 변환\n    const videos = channelInfo.recentVideos.map(video => ({\n      title: video.title,\n      viewCount: parseInt(video.statistics.viewCount.replace(/,/g, '')),\n      likeCount: parseInt(video.statistics.likeCount.replace(/,/g, '')),\n      commentCount: parseInt(video.statistics.commentCount.replace(/,/g, '')),\n      uploadDate: video.publishedAt\n    }));\n\n    // 구독자 수에서 쉼표와 '명' 제거 후 숫자로 변환\n    const subscriberCount = channelInfo.subscriberCount.replace(/[,명]/g, '');\n    const analysisData = {\n      channelInfo: {\n        title: channelInfo.title,\n        subscriberCount: subscriberCount,\n        description: `구독자 ${channelInfo.subscriberCount}`\n      },\n      videoStats: videos\n    };\n    onAnalyze(analysisData);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: 3,\n      maxWidth: 800,\n      mx: 'auto',\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(YouTube, {\n        sx: {\n          fontSize: 60,\n          color: 'error.main'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"YouTube \\uCC44\\uB110 URL\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          display: 'flex',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"https://www.youtube.com/@channelname\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          disabled: loading,\n          error: !!error,\n          helperText: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"large\",\n          disabled: loading || !url,\n          sx: {\n            minWidth: 120\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 24\n          }, this) : '검색'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), channelInfo && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: channelInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          color: \"text.secondary\",\n          children: [\"\\uAD6C\\uB3C5\\uC790 \", channelInfo.subscriberCount, \"\\uBA85\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"\\uCD5C\\uADFC \\uC5C5\\uB85C\\uB4DC \\uC601\\uC0C1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: channelInfo.recentVideos.map((video, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                display: 'flex',\n                height: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                sx: {\n                  width: 200\n                },\n                image: video.thumbnail,\n                alt: video.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  flex: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  href: video.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  underline: \"hover\",\n                  color: \"inherit\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: video.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"\\uC870\\uD68C\\uC218: \", video.statistics.viewCount, \"\\uD68C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"\\uC88B\\uC544\\uC694: \", video.statistics.likeCount, \"\\uAC1C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"\\uB313\\uAE00: \", video.statistics.commentCount, \"\\uAC1C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"\\uC5C5\\uB85C\\uB4DC: \", video.publishedAt]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), (() => {\n          const eligibility = checkChannelEligibility(channelInfo.recentVideos);\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: eligibility.isEligible ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              size: \"large\",\n              onClick: handleAnalyze,\n              children: \"\\uBD84\\uC11D\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"error\",\n                fullWidth: true,\n                size: \"large\",\n                disabled: true,\n                children: \"\\uBD84\\uC11D \\uBD88\\uAC00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                sx: {\n                  mt: 2\n                },\n                children: [\"3\\uAC1C\\uC6D4 \\uB0B4\\uC5D0 \\uC5C5\\uB85C\\uB4DC \\uD55C \\uAC8C\\uC2DC\\uBB3C\\uC774 5\\uAC1C \\uC774\\uC0C1\\uC774\\uACE0, \\uD55C\\uB2EC\\uC774\\uB0B4\\uC5D0 \\uC5C5\\uB85C\\uB4DC\\uD55C \\uAC8C\\uC2DC\\uBB3C\\uC774 1\\uAC1C \\uC774\\uC0C1\\uC77C\\uB54C \\uBD84\\uC11D \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this), \"\\uD604\\uC7AC \\uC0C1\\uD0DC: 3\\uAC1C\\uC6D4 \\uB0B4 \", eligibility.videosInThreeMonths, \"\\uAC1C, 1\\uAC1C\\uC6D4 \\uB0B4 \", eligibility.videosInOneMonth, \"\\uAC1C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(ChannelInput, \"spazEZhRx1v4dOZvCKhQiuOrrOk=\");\n_c = ChannelInput;\nexport default ChannelInput;\nvar _c;\n$RefreshReg$(_c, \"ChannelInput\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Typography","Paper","CircularProgress","Alert","Grid","Link","Card","CardContent","CardMedia","YouTube","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","ChannelInput","onAnalyze","_s","url","setUrl","loading","setLoading","error","setError","channelInfo","setChannelInfo","checkChannelEligibility","videos","now","Date","oneMonthAgo","getFullYear","getMonth","getDate","threeMonthsAgo","parseDate","dateStr","match","year","month","day","parseInt","recentVideos","map","video","date","publishedAt","videosInThreeMonths","filter","videosInOneMonth","isEligible","length","handleSubmit","e","preventDefault","urlPattern","videoPattern","test","response","get","params","data","err","_err$response","_err$response$data","console","handleAnalyze","title","viewCount","statistics","replace","likeCount","commentCount","uploadDate","subscriberCount","analysisData","description","videoStats","component","onSubmit","sx","display","flexDirection","alignItems","gap","maxWidth","mx","mt","children","elevation","p","width","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","variant","align","gutterBottom","fullWidth","placeholder","value","onChange","target","disabled","helperText","type","size","minWidth","mb","container","spacing","index","item","xs","height","image","thumbnail","alt","flex","href","rel","underline","eligibility","onClick","severity","_c","$RefreshReg$"],"sources":["/Users/hyunillee/Projects/analysis_youtube/frontend/src/components/channel/ChannelInput.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  Typography,\n  Paper,\n  CircularProgress,\n  Alert,\n  Grid,\n  Link,\n  Card,\n  CardContent,\n  CardMedia\n} from '@mui/material';\nimport { YouTube } from '@mui/icons-material';\nimport axios from 'axios';\n\ninterface ChannelInputProps {\n  onAnalyze: (data: any) => void;\n}\n\ninterface ChannelInfo {\n  channelId: string;\n  title: string;\n  subscriberCount: string;\n  recentVideos: {\n    title: string;\n    publishedAt: string;\n    url: string;\n    thumbnail: string;\n    statistics: {\n      viewCount: string;\n      likeCount: string;\n      commentCount: string;\n    };\n  }[];\n}\n\n// API URL 설정\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4001/api';\n\nconst ChannelInput: React.FC<ChannelInputProps> = ({ onAnalyze }) => {\n  const [url, setUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [channelInfo, setChannelInfo] = useState<ChannelInfo | null>(null);\n\n  // 채널 분석 가능 여부 확인 함수\n  const checkChannelEligibility = (videos: any[]) => {\n    const now = new Date();\n    const oneMonthAgo = new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n    const threeMonthsAgo = new Date(now.getFullYear(), now.getMonth() - 3, now.getDate());\n\n    // 날짜 문자열을 Date 객체로 변환하는 함수\n    const parseDate = (dateStr: string) => {\n      const match = dateStr.match(/(\\d{4})년 (\\d{1,2})월 (\\d{1,2})일/);\n      if (match) {\n        const [, year, month, day] = match;\n        return new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n      }\n      return new Date();\n    };\n\n    const recentVideos = videos.map(video => {\n      const date = parseDate(video.publishedAt);\n      return { ...video, date };\n    });\n\n    const videosInThreeMonths = recentVideos.filter(video => video.date >= threeMonthsAgo);\n    const videosInOneMonth = recentVideos.filter(video => video.date >= oneMonthAgo);\n\n    return {\n      isEligible: videosInThreeMonths.length >= 5 && videosInOneMonth.length >= 1,\n      videosInThreeMonths: videosInThreeMonths.length,\n      videosInOneMonth: videosInOneMonth.length\n    };\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    setChannelInfo(null);\n\n    // URL 패턴 검증 (@username 형식도 허용)\n    const urlPattern = /^(https?:\\/\\/)?(www\\.)?youtube\\.com\\/@[^/?]+/;\n    const videoPattern = /^(https?:\\/\\/)?(www\\.)?youtube\\.com\\/watch\\?v=[^&]+/;\n    \n    if (!urlPattern.test(url) && !videoPattern.test(url)) {\n      setError('올바른 유튜브 채널 URL을 입력해주세요. (예: https://youtube.com/@channelname)');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await axios.get(`${API_URL}/channel`, {\n        params: { url }\n      });\n      setChannelInfo(response.data);\n    } catch (err: any) {\n      setError(err.response?.data?.error || '채널 정보를 가져오는데 실패했습니다.');\n      console.error('Error fetching channel info:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnalyze = () => {\n    if (!channelInfo) return;\n\n    // 채널 데이터 형식 변환\n    const videos = channelInfo.recentVideos.map(video => ({\n      title: video.title,\n      viewCount: parseInt(video.statistics.viewCount.replace(/,/g, '')),\n      likeCount: parseInt(video.statistics.likeCount.replace(/,/g, '')),\n      commentCount: parseInt(video.statistics.commentCount.replace(/,/g, '')),\n      uploadDate: video.publishedAt\n    }));\n\n    // 구독자 수에서 쉼표와 '명' 제거 후 숫자로 변환\n    const subscriberCount = channelInfo.subscriberCount.replace(/[,명]/g, '');\n\n    const analysisData = {\n      channelInfo: {\n        title: channelInfo.title,\n        subscriberCount: subscriberCount,\n        description: `구독자 ${channelInfo.subscriberCount}`\n      },\n      videoStats: videos\n    };\n\n    onAnalyze(analysisData);\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 3,\n        maxWidth: 800,\n        mx: 'auto',\n        mt: 4\n      }}\n    >\n      <Paper\n        elevation={3}\n        sx={{\n          p: 4,\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 3\n        }}\n      >\n        <YouTube sx={{ fontSize: 60, color: 'error.main' }} />\n        \n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          YouTube 채널 URL을 입력하세요\n        </Typography>\n\n        <Box sx={{ width: '100%', display: 'flex', gap: 2 }}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"https://www.youtube.com/@channelname\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n            disabled={loading}\n            error={!!error}\n            helperText={error}\n          />\n\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            size=\"large\"\n            disabled={loading || !url}\n            sx={{ minWidth: 120 }}\n          >\n            {loading ? <CircularProgress size={24} /> : '검색'}\n          </Button>\n        </Box>\n\n        {channelInfo && (\n          <Box sx={{ width: '100%', mt: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              {channelInfo.title}\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom color=\"text.secondary\">\n              구독자 {channelInfo.subscriberCount}명\n            </Typography>\n\n            <Typography variant=\"h6\" sx={{ mt: 3, mb: 2 }}>\n              최근 업로드 영상\n            </Typography>\n            <Grid container spacing={2}>\n              {channelInfo.recentVideos.map((video, index) => (\n                <Grid item xs={12} key={index}>\n                  <Card sx={{ display: 'flex', height: '100%' }}>\n                    <CardMedia\n                      component=\"img\"\n                      sx={{ width: 200 }}\n                      image={video.thumbnail}\n                      alt={video.title}\n                    />\n                    <CardContent sx={{ flex: 1 }}>\n                      <Link\n                        href={video.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        underline=\"hover\"\n                        color=\"inherit\"\n                      >\n                        <Typography variant=\"subtitle1\" gutterBottom>\n                          {video.title}\n                        </Typography>\n                      </Link>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        조회수: {video.statistics.viewCount}회\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        좋아요: {video.statistics.likeCount}개\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        댓글: {video.statistics.commentCount}개\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        업로드: {video.publishedAt}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n\n            {(() => {\n              const eligibility = checkChannelEligibility(channelInfo.recentVideos);\n              return (\n                <Box sx={{ mt: 3 }}>\n                  {eligibility.isEligible ? (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      size=\"large\"\n                      onClick={handleAnalyze}\n                    >\n                      분석하기\n                    </Button>\n                  ) : (\n                    <>\n                      <Button\n                        variant=\"contained\"\n                        color=\"error\"\n                        fullWidth\n                        size=\"large\"\n                        disabled\n                      >\n                        분석 불가\n                      </Button>\n                      <Alert severity=\"error\" sx={{ mt: 2 }}>\n                        3개월 내에 업로드 한 게시물이 5개 이상이고, 한달이내에 업로드한 게시물이 1개 이상일때 분석 가능합니다.\n                        <br />\n                        현재 상태: 3개월 내 {eligibility.videosInThreeMonths}개, 1개월 내 {eligibility.videosInOneMonth}개\n                      </Alert>\n                    </>\n                  )}\n                </Box>\n              );\n            })()}\n          </Box>\n        )}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default ChannelInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}