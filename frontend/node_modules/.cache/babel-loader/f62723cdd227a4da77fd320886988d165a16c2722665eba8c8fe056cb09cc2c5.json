{"ast":null,"code":"var _jsxFileName = \"/Users/hyunillee/Projects/analysis_youtube/frontend/src/components/products/ProductSelection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Checkbox, Slider, FormControlLabel, Paper, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst packages = [{\n  name: 'BASIC 패키지',\n  price: 100000,\n  count: 0,\n  formula: {\n    views: v => 20,\n    likes: l => 15,\n    comments: c => 10\n  }\n}, {\n  name: 'STANDARD 패키지',\n  price: 200000,\n  count: 0,\n  formula: {\n    views: v => 40,\n    likes: l => 30,\n    comments: c => 20\n  }\n}, {\n  name: 'PREMIUM 패키지',\n  price: 300000,\n  count: 0,\n  formula: {\n    views: v => 60,\n    likes: l => 45,\n    comments: c => 30\n  }\n}, {\n  name: 'VIP 패키지',\n  price: 500000,\n  count: 0,\n  formula: {\n    views: v => 100,\n    likes: l => 80,\n    comments: c => 50\n  }\n}];\nconst ProductSelection = ({\n  videos,\n  onProductSelect\n}) => {\n  _s();\n  const [selectedVideos, setSelectedVideos] = useState({});\n  const [videoPackages, setVideoPackages] = useState({});\n  const [videoMetrics, setVideoMetrics] = useState({});\n  const [packageCounts, setPackageCounts] = useState(packages);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [videoTotals, setVideoTotals] = useState({});\n  const [subscriberCount, setSubscriberCount] = useState(1000);\n  const [isSubscriberSelected, setIsSubscriberSelected] = useState(false);\n  const getPackageIncreaseRange = packageName => {\n    switch (packageName) {\n      case 'BASIC 패키지':\n        return {\n          min: 20,\n          max: 50\n        };\n      case 'STANDARD 패키지':\n        return {\n          min: 50,\n          max: 100\n        };\n      case 'PREMIUM 패키지':\n        return {\n          min: 100,\n          max: 200\n        };\n      case 'VIP 패키지':\n        return {\n          min: 200,\n          max: 500\n        };\n      default:\n        return {\n          min: 0,\n          max: 50\n        };\n    }\n  };\n  const handleVideoSelect = videoTitle => {\n    setSelectedVideos(prev => ({\n      ...prev,\n      [videoTitle]: !prev[videoTitle]\n    }));\n  };\n  const handlePackageSelect = (videoTitle, packageName) => {\n    setVideoPackages(prev => ({\n      ...prev,\n      [videoTitle]: packageName\n    }));\n    const range = getPackageIncreaseRange(packageName);\n    setVideoMetrics(prev => ({\n      ...prev,\n      [videoTitle]: {\n        views: range.min,\n        likes: range.min,\n        comments: range.min\n      }\n    }));\n  };\n  const handleMetricChange = (videoTitle, metric, value) => {\n    const packageName = videoPackages[videoTitle];\n    if (packageName) {\n      const range = getPackageIncreaseRange(packageName);\n      const adjustedValue = Math.min(Math.max(value, range.min), range.max);\n      setVideoMetrics(prev => ({\n        ...prev,\n        [videoTitle]: {\n          ...prev[videoTitle],\n          [metric]: adjustedValue\n        }\n      }));\n    }\n  };\n  useEffect(() => {\n    // 패키지 카운트 및 금액 계산\n    const counts = packages.map(pkg => ({\n      ...pkg,\n      count: Object.values(videoPackages).filter(p => p === pkg.name).length\n    }));\n    setPackageCounts(counts);\n\n    // 총액 계산\n    let total = 0;\n    const newVideoTotals = {};\n    Object.entries(videoPackages).forEach(([videoTitle, packageName]) => {\n      const pkg = counts.find(p => p.name === packageName);\n      const metrics = videoMetrics[videoTitle];\n      if (pkg && metrics) {\n        const videoTotal = pkg.price + (metrics.views + metrics.likes + metrics.comments) * 1000;\n        newVideoTotals[videoTitle] = videoTotal;\n        total += videoTotal;\n      }\n    });\n\n    // 구독자 상품 금액 추가\n    if (isSubscriberSelected) {\n      total += subscriberCount * 500;\n    }\n    setVideoTotals(newVideoTotals);\n    setTotalAmount(total);\n  }, [videoPackages, videoMetrics, subscriberCount, isSubscriberSelected]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"1. \\uAD6C\\uB3C5\\uC790 \\uC218 \\uC99D\\uAC00 \\uB2E8\\uD488\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: isSubscriberSelected,\n            onChange: e => setIsSubscriberSelected(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this),\n          label: \"\\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"\\uBAA9\\uD45C \\uAD6C\\uB3C5\\uC790 \\uC218 \\uC124\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: subscriberCount,\n              onChange: (_, value) => setSubscriberCount(value),\n              min: 1000,\n              max: 100000,\n              step: 1000,\n              valueLabelDisplay: \"auto\",\n              valueLabelFormat: value => `${value.toLocaleString()}명`,\n              sx: {\n                width: '100%'\n              },\n              disabled: !isSubscriberSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [\"\\uC124\\uC815\\uB41C \\uAD6C\\uB3C5\\uC790 \\uC218: \", subscriberCount.toLocaleString(), \"\\uBA85\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"primary\",\n                children: [\"\\uAE08\\uC561: \\u20A9\", (isSubscriberSelected ? subscriberCount * 500 : 0).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"2. \\uC601\\uC0C1\\uBCC4 \\uD328\\uD0A4\\uC9C0 \\uC120\\uD0DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), videos.map((video, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductSelection, \"pv+Ngpx+j60nmp2mQOC5mUL0tUo=\");\n_c = ProductSelection;\nexport default ProductSelection;\nvar _c;\n$RefreshReg$(_c, \"ProductSelection\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Checkbox","Slider","FormControlLabel","Paper","Grid","jsxDEV","_jsxDEV","packages","name","price","count","formula","views","v","likes","l","comments","c","ProductSelection","videos","onProductSelect","_s","selectedVideos","setSelectedVideos","videoPackages","setVideoPackages","videoMetrics","setVideoMetrics","packageCounts","setPackageCounts","totalAmount","setTotalAmount","videoTotals","setVideoTotals","subscriberCount","setSubscriberCount","isSubscriberSelected","setIsSubscriberSelected","getPackageIncreaseRange","packageName","min","max","handleVideoSelect","videoTitle","prev","handlePackageSelect","range","handleMetricChange","metric","value","adjustedValue","Math","counts","map","pkg","Object","values","filter","p","length","total","newVideoTotals","entries","forEach","find","metrics","videoTotal","children","elevation","sx","mb","display","alignItems","variant","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","control","checked","onChange","e","target","label","mt","container","spacing","item","xs","gutterBottom","_","step","valueLabelDisplay","valueLabelFormat","toLocaleString","width","disabled","justifyContent","color","video","index","_c","$RefreshReg$"],"sources":["/Users/hyunillee/Projects/analysis_youtube/frontend/src/components/products/ProductSelection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Checkbox,\n  Slider,\n  FormControlLabel,\n  Paper,\n  Grid,\n  Card,\n  CardContent,\n  Radio,\n  RadioGroup,\n  Divider,\n  Chip,\n  CardMedia\n} from '@mui/material';\n\ninterface Video {\n  title: string;\n  publishedAt: string;\n  thumbnail: string;\n  performance?: {\n    views: string;\n    likes: string;\n    comments: string;\n  };\n  statistics?: {\n    viewCount: string;\n    likeCount: string;\n    commentCount: string;\n    subscriberCount?: string;\n  };\n}\n\ninterface ProductSelectionProps {\n  videos: Video[];\n  onProductSelect: (selection: any) => void;\n}\n\ninterface PackageType {\n  name: string;\n  price: number;\n  count: number;\n  formula: {\n    views: (v: number) => number;\n    likes: (l: number) => number;\n    comments: (c: number) => number;\n  };\n}\n\nconst packages: PackageType[] = [\n  { \n    name: 'BASIC 패키지', \n    price: 100000, \n    count: 0,\n    formula: {\n      views: (v: number) => 20,\n      likes: (l: number) => 15,\n      comments: (c: number) => 10\n    }\n  },\n  { \n    name: 'STANDARD 패키지', \n    price: 200000, \n    count: 0,\n    formula: {\n      views: (v: number) => 40,\n      likes: (l: number) => 30,\n      comments: (c: number) => 20\n    }\n  },\n  { \n    name: 'PREMIUM 패키지', \n    price: 300000, \n    count: 0,\n    formula: {\n      views: (v: number) => 60,\n      likes: (l: number) => 45,\n      comments: (c: number) => 30\n    }\n  },\n  { \n    name: 'VIP 패키지', \n    price: 500000, \n    count: 0,\n    formula: {\n      views: (v: number) => 100,\n      likes: (l: number) => 80,\n      comments: (c: number) => 50\n    }\n  },\n];\n\nconst ProductSelection: React.FC<ProductSelectionProps> = ({ videos, onProductSelect }) => {\n  const [selectedVideos, setSelectedVideos] = useState<{ [key: string]: boolean }>({});\n  const [videoPackages, setVideoPackages] = useState<{ [key: string]: string }>({});\n  const [videoMetrics, setVideoMetrics] = useState<{\n    [key: string]: {\n      views: number;\n      likes: number;\n      comments: number;\n    };\n  }>({});\n  const [packageCounts, setPackageCounts] = useState<PackageType[]>(packages);\n  const [totalAmount, setTotalAmount] = useState<number>(0);\n  const [videoTotals, setVideoTotals] = useState<{ [key: string]: number }>({});\n  const [subscriberCount, setSubscriberCount] = useState<number>(1000);\n  const [isSubscriberSelected, setIsSubscriberSelected] = useState<boolean>(false);\n\n  const getPackageIncreaseRange = (packageName: string): { min: number; max: number } => {\n    switch (packageName) {\n      case 'BASIC 패키지':\n        return { min: 20, max: 50 };\n      case 'STANDARD 패키지':\n        return { min: 50, max: 100 };\n      case 'PREMIUM 패키지':\n        return { min: 100, max: 200 };\n      case 'VIP 패키지':\n        return { min: 200, max: 500 };\n      default:\n        return { min: 0, max: 50 };\n    }\n  };\n\n  const handleVideoSelect = (videoTitle: string) => {\n    setSelectedVideos(prev => ({\n      ...prev,\n      [videoTitle]: !prev[videoTitle]\n    }));\n  };\n\n  const handlePackageSelect = (videoTitle: string, packageName: string) => {\n    setVideoPackages(prev => ({\n      ...prev,\n      [videoTitle]: packageName\n    }));\n\n    const range = getPackageIncreaseRange(packageName);\n    setVideoMetrics(prev => ({\n      ...prev,\n      [videoTitle]: {\n        views: range.min,\n        likes: range.min,\n        comments: range.min\n      }\n    }));\n  };\n\n  const handleMetricChange = (videoTitle: string, metric: 'views' | 'likes' | 'comments', value: number) => {\n    const packageName = videoPackages[videoTitle];\n    \n    if (packageName) {\n      const range = getPackageIncreaseRange(packageName);\n      const adjustedValue = Math.min(Math.max(value, range.min), range.max);\n      \n      setVideoMetrics(prev => ({\n        ...prev,\n        [videoTitle]: {\n          ...prev[videoTitle],\n          [metric]: adjustedValue\n        }\n      }));\n    }\n  };\n\n  useEffect(() => {\n    // 패키지 카운트 및 금액 계산\n    const counts = packages.map(pkg => ({\n      ...pkg,\n      count: Object.values(videoPackages).filter(p => p === pkg.name).length\n    }));\n    setPackageCounts(counts);\n\n    // 총액 계산\n    let total = 0;\n    const newVideoTotals: { [key: string]: number } = {};\n\n    Object.entries(videoPackages).forEach(([videoTitle, packageName]) => {\n      const pkg = counts.find(p => p.name === packageName);\n      const metrics = videoMetrics[videoTitle];\n      \n      if (pkg && metrics) {\n        const videoTotal = pkg.price + ((metrics.views + metrics.likes + metrics.comments) * 1000);\n        newVideoTotals[videoTitle] = videoTotal;\n        total += videoTotal;\n      }\n    });\n\n    // 구독자 상품 금액 추가\n    if (isSubscriberSelected) {\n      total += subscriberCount * 500;\n    }\n\n    setVideoTotals(newVideoTotals);\n    setTotalAmount(total);\n  }, [videoPackages, videoMetrics, subscriberCount, isSubscriberSelected]);\n\n  return (\n    <Box>\n      {/* 구독자 단품 상품 */}\n      <Paper elevation={3} sx={{ p: 3, mb: 4 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            1. 구독자 수 증가 단품\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSubscriberSelected}\n                onChange={(e) => setIsSubscriberSelected(e.target.checked)}\n              />\n            }\n            label=\"선택\"\n          />\n        </Box>\n        <Box sx={{ mt: 2 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography gutterBottom>목표 구독자 수 설정</Typography>\n              <Slider\n                value={subscriberCount}\n                onChange={(_, value) => setSubscriberCount(value as number)}\n                min={1000}\n                max={100000}\n                step={1000}\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => `${value.toLocaleString()}명`}\n                sx={{ width: '100%' }}\n                disabled={!isSubscriberSelected}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n                <Typography variant=\"body1\">\n                  설정된 구독자 수: {subscriberCount.toLocaleString()}명\n                </Typography>\n                <Typography variant=\"h6\" color=\"primary\">\n                  금액: ₩{(isSubscriberSelected ? subscriberCount * 500 : 0).toLocaleString()}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n\n      {/* 영상별 패키지 상품 */}\n      <Paper elevation={3} sx={{ p: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          2. 영상별 패키지 선택\n        </Typography>\n        {videos.map((video, index) => (\n          <Box key={index} sx={{ mb: 4 }}>\n            {/* ... 나머지 JSX 코드 ... */}\n          </Box>\n        ))}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default ProductSelection; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,UAAU,EACVC,QAAQ,EACRC,MAAM,EACNC,gBAAgB,EAChBC,KAAK,EACLC,IAAI,QAQC,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmCvB,MAAMC,QAAuB,GAAG,CAC9B;EACEC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,MAAM;EACbC,KAAK,EAAE,CAAC;EACRC,OAAO,EAAE;IACPC,KAAK,EAAGC,CAAS,IAAK,EAAE;IACxBC,KAAK,EAAGC,CAAS,IAAK,EAAE;IACxBC,QAAQ,EAAGC,CAAS,IAAK;EAC3B;AACF,CAAC,EACD;EACET,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,MAAM;EACbC,KAAK,EAAE,CAAC;EACRC,OAAO,EAAE;IACPC,KAAK,EAAGC,CAAS,IAAK,EAAE;IACxBC,KAAK,EAAGC,CAAS,IAAK,EAAE;IACxBC,QAAQ,EAAGC,CAAS,IAAK;EAC3B;AACF,CAAC,EACD;EACET,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,MAAM;EACbC,KAAK,EAAE,CAAC;EACRC,OAAO,EAAE;IACPC,KAAK,EAAGC,CAAS,IAAK,EAAE;IACxBC,KAAK,EAAGC,CAAS,IAAK,EAAE;IACxBC,QAAQ,EAAGC,CAAS,IAAK;EAC3B;AACF,CAAC,EACD;EACET,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,MAAM;EACbC,KAAK,EAAE,CAAC;EACRC,OAAO,EAAE;IACPC,KAAK,EAAGC,CAAS,IAAK,GAAG;IACzBC,KAAK,EAAGC,CAAS,IAAK,EAAE;IACxBC,QAAQ,EAAGC,CAAS,IAAK;EAC3B;AACF,CAAC,CACF;AAED,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAA6B,CAAC,CAAC,CAAC;EACpF,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAA4B,CAAC,CAAC,CAAC;EACjF,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAM7C,CAAC,CAAC,CAAC;EACN,MAAM,CAACgC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjC,QAAQ,CAAgBW,QAAQ,CAAC;EAC3E,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAS,CAAC,CAAC;EACzD,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAA4B,CAAC,CAAC,CAAC;EAC7E,MAAM,CAACsC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvC,QAAQ,CAAS,IAAI,CAAC;EACpE,MAAM,CAACwC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGzC,QAAQ,CAAU,KAAK,CAAC;EAEhF,MAAM0C,uBAAuB,GAAIC,WAAmB,IAAmC;IACrF,QAAQA,WAAW;MACjB,KAAK,WAAW;QACd,OAAO;UAAEC,GAAG,EAAE,EAAE;UAAEC,GAAG,EAAE;QAAG,CAAC;MAC7B,KAAK,cAAc;QACjB,OAAO;UAAED,GAAG,EAAE,EAAE;UAAEC,GAAG,EAAE;QAAI,CAAC;MAC9B,KAAK,aAAa;QAChB,OAAO;UAAED,GAAG,EAAE,GAAG;UAAEC,GAAG,EAAE;QAAI,CAAC;MAC/B,KAAK,SAAS;QACZ,OAAO;UAAED,GAAG,EAAE,GAAG;UAAEC,GAAG,EAAE;QAAI,CAAC;MAC/B;QACE,OAAO;UAAED,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAG,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAIC,UAAkB,IAAK;IAChDpB,iBAAiB,CAACqB,IAAI,KAAK;MACzB,GAAGA,IAAI;MACP,CAACD,UAAU,GAAG,CAACC,IAAI,CAACD,UAAU;IAChC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAACF,UAAkB,EAAEJ,WAAmB,KAAK;IACvEd,gBAAgB,CAACmB,IAAI,KAAK;MACxB,GAAGA,IAAI;MACP,CAACD,UAAU,GAAGJ;IAChB,CAAC,CAAC,CAAC;IAEH,MAAMO,KAAK,GAAGR,uBAAuB,CAACC,WAAW,CAAC;IAClDZ,eAAe,CAACiB,IAAI,KAAK;MACvB,GAAGA,IAAI;MACP,CAACD,UAAU,GAAG;QACZ/B,KAAK,EAAEkC,KAAK,CAACN,GAAG;QAChB1B,KAAK,EAAEgC,KAAK,CAACN,GAAG;QAChBxB,QAAQ,EAAE8B,KAAK,CAACN;MAClB;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMO,kBAAkB,GAAGA,CAACJ,UAAkB,EAAEK,MAAsC,EAAEC,KAAa,KAAK;IACxG,MAAMV,WAAW,GAAGf,aAAa,CAACmB,UAAU,CAAC;IAE7C,IAAIJ,WAAW,EAAE;MACf,MAAMO,KAAK,GAAGR,uBAAuB,CAACC,WAAW,CAAC;MAClD,MAAMW,aAAa,GAAGC,IAAI,CAACX,GAAG,CAACW,IAAI,CAACV,GAAG,CAACQ,KAAK,EAAEH,KAAK,CAACN,GAAG,CAAC,EAAEM,KAAK,CAACL,GAAG,CAAC;MAErEd,eAAe,CAACiB,IAAI,KAAK;QACvB,GAAGA,IAAI;QACP,CAACD,UAAU,GAAG;UACZ,GAAGC,IAAI,CAACD,UAAU,CAAC;UACnB,CAACK,MAAM,GAAGE;QACZ;MACF,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAEDrD,SAAS,CAAC,MAAM;IACd;IACA,MAAMuD,MAAM,GAAG7C,QAAQ,CAAC8C,GAAG,CAACC,GAAG,KAAK;MAClC,GAAGA,GAAG;MACN5C,KAAK,EAAE6C,MAAM,CAACC,MAAM,CAAChC,aAAa,CAAC,CAACiC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,GAAG,CAAC9C,IAAI,CAAC,CAACmD;IAClE,CAAC,CAAC,CAAC;IACH9B,gBAAgB,CAACuB,MAAM,CAAC;;IAExB;IACA,IAAIQ,KAAK,GAAG,CAAC;IACb,MAAMC,cAAyC,GAAG,CAAC,CAAC;IAEpDN,MAAM,CAACO,OAAO,CAACtC,aAAa,CAAC,CAACuC,OAAO,CAAC,CAAC,CAACpB,UAAU,EAAEJ,WAAW,CAAC,KAAK;MACnE,MAAMe,GAAG,GAAGF,MAAM,CAACY,IAAI,CAACN,CAAC,IAAIA,CAAC,CAAClD,IAAI,KAAK+B,WAAW,CAAC;MACpD,MAAM0B,OAAO,GAAGvC,YAAY,CAACiB,UAAU,CAAC;MAExC,IAAIW,GAAG,IAAIW,OAAO,EAAE;QAClB,MAAMC,UAAU,GAAGZ,GAAG,CAAC7C,KAAK,GAAI,CAACwD,OAAO,CAACrD,KAAK,GAAGqD,OAAO,CAACnD,KAAK,GAAGmD,OAAO,CAACjD,QAAQ,IAAI,IAAK;QAC1F6C,cAAc,CAAClB,UAAU,CAAC,GAAGuB,UAAU;QACvCN,KAAK,IAAIM,UAAU;MACrB;IACF,CAAC,CAAC;;IAEF;IACA,IAAI9B,oBAAoB,EAAE;MACxBwB,KAAK,IAAI1B,eAAe,GAAG,GAAG;IAChC;IAEAD,cAAc,CAAC4B,cAAc,CAAC;IAC9B9B,cAAc,CAAC6B,KAAK,CAAC;EACvB,CAAC,EAAE,CAACpC,aAAa,EAAEE,YAAY,EAAEQ,eAAe,EAAEE,oBAAoB,CAAC,CAAC;EAExE,oBACE9B,OAAA,CAACR,GAAG;IAAAqE,QAAA,gBAEF7D,OAAA,CAACH,KAAK;MAACiE,SAAS,EAAE,CAAE;MAACC,EAAE,EAAE;QAAEX,CAAC,EAAE,CAAC;QAAEY,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBACvC7D,OAAA,CAACR,GAAG;QAACuE,EAAE,EAAE;UAAEE,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEF,EAAE,EAAE;QAAE,CAAE;QAAAH,QAAA,gBACxD7D,OAAA,CAACP,UAAU;UAAC0E,OAAO,EAAC,IAAI;UAACJ,EAAE,EAAE;YAAEK,QAAQ,EAAE;UAAE,CAAE;UAAAP,QAAA,EAAC;QAE9C;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbxE,OAAA,CAACJ,gBAAgB;UACf6E,OAAO,eACLzE,OAAA,CAACN,QAAQ;YACPgF,OAAO,EAAE5C,oBAAqB;YAC9B6C,QAAQ,EAAGC,CAAC,IAAK7C,uBAAuB,CAAC6C,CAAC,CAACC,MAAM,CAACH,OAAO;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CACF;UACDM,KAAK,EAAC;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxE,OAAA,CAACR,GAAG;QAACuE,EAAE,EAAE;UAAEgB,EAAE,EAAE;QAAE,CAAE;QAAAlB,QAAA,eACjB7D,OAAA,CAACF,IAAI;UAACkF,SAAS;UAACC,OAAO,EAAE,CAAE;UAAApB,QAAA,gBACzB7D,OAAA,CAACF,IAAI;YAACoF,IAAI;YAACC,EAAE,EAAE,EAAG;YAAAtB,QAAA,gBAChB7D,OAAA,CAACP,UAAU;cAAC2F,YAAY;cAAAvB,QAAA,EAAC;YAAW;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACjDxE,OAAA,CAACL,MAAM;cACLgD,KAAK,EAAEf,eAAgB;cACvB+C,QAAQ,EAAEA,CAACU,CAAC,EAAE1C,KAAK,KAAKd,kBAAkB,CAACc,KAAe,CAAE;cAC5DT,GAAG,EAAE,IAAK;cACVC,GAAG,EAAE,MAAO;cACZmD,IAAI,EAAE,IAAK;cACXC,iBAAiB,EAAC,MAAM;cACxBC,gBAAgB,EAAG7C,KAAK,IAAK,GAAGA,KAAK,CAAC8C,cAAc,CAAC,CAAC,GAAI;cAC1D1B,EAAE,EAAE;gBAAE2B,KAAK,EAAE;cAAO,CAAE;cACtBC,QAAQ,EAAE,CAAC7D;YAAqB;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACPxE,OAAA,CAACF,IAAI;YAACoF,IAAI;YAACC,EAAE,EAAE,EAAG;YAAAtB,QAAA,eAChB7D,OAAA,CAACR,GAAG;cAACuE,EAAE,EAAE;gBAAEE,OAAO,EAAE,MAAM;gBAAE2B,cAAc,EAAE,eAAe;gBAAEb,EAAE,EAAE;cAAE,CAAE;cAAAlB,QAAA,gBACnE7D,OAAA,CAACP,UAAU;gBAAC0E,OAAO,EAAC,OAAO;gBAAAN,QAAA,GAAC,gDACf,EAACjC,eAAe,CAAC6D,cAAc,CAAC,CAAC,EAAC,QAC/C;cAAA;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbxE,OAAA,CAACP,UAAU;gBAAC0E,OAAO,EAAC,IAAI;gBAAC0B,KAAK,EAAC,SAAS;gBAAAhC,QAAA,GAAC,sBAClC,EAAC,CAAC/B,oBAAoB,GAAGF,eAAe,GAAG,GAAG,GAAG,CAAC,EAAE6D,cAAc,CAAC,CAAC;cAAA;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGRxE,OAAA,CAACH,KAAK;MAACiE,SAAS,EAAE,CAAE;MAACC,EAAE,EAAE;QAAEX,CAAC,EAAE;MAAE,CAAE;MAAAS,QAAA,gBAChC7D,OAAA,CAACP,UAAU;QAAC0E,OAAO,EAAC,IAAI;QAACiB,YAAY;QAAAvB,QAAA,EAAC;MAEtC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EACZ3D,MAAM,CAACkC,GAAG,CAAC,CAAC+C,KAAK,EAAEC,KAAK,kBACvB/F,OAAA,CAACR,GAAG;QAAauE,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE;MAAE,GAArB+B,KAAK;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACzD,EAAA,CArKIH,gBAAiD;AAAAoF,EAAA,GAAjDpF,gBAAiD;AAuKvD,eAAeA,gBAAgB;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}